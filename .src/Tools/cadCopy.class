' Gambas class file

' GauchoCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

' Tool maintained by Terco
Inherits ToolsBase
Create Static
Public Const Gender As String = "Copy"
' Add more if needed

Public Function Start(Optional ElemToBuild As Variant, Optional _Mode As Integer = 0) As Boolean
    ' Llamada por FCAD al inicio de la aplicacion de esta herramienta

    ' Aprovechamos para establecer los helpers (comentarios de ayuda en pantalla)
    Me.PointsDone = 0
    Me.PointsTotal = 2

    clsDrawingAids.HelperTrabajo = ("Copy") & ""

    ' chequeamos si hubo seleccion previa
    Me.SelectionCount = clsEntities.GetSelectionCount()

    If Me.SelectionCount = 0 Then                                     ' we have no elements in the selection

        clsDrawingAids.Helper.texto = clsDrawingAids.HelperTrabajo & ": " & ("Select entities")

        gcd.clsJobPrevious = Me
        gcd.clsJob = clsDefaultJob

    Else                                                                    ' need the first point

        clsDrawingAids.Helper.texto = clsDrawingAids.HelperTrabajo & ": " & ("Base point")
        clsDrawingAids.HelperTrabajo = clsDrawingAids.HelperTrabajo & Str(Me.SelectionCount) & " " & ("elements")

    Endif

    Me.Active = True
    gcd.ToolActive = True

End

Public Function MouseUp(mouseX As Integer, mouseY As Integer) ' called by FCAD-> DrawingArea_MouseUp

    Inc Me.PointsDone

    If Me.PointsDone = 1 Then ' acabo de marcar el punto base
        gcd.DrawOriginals = True

        ' ya tengo cosas seleccionadas
        clsDrawingAids.Helper.texto = ("Final point")

        ' punto real base
        Me.SelStartXr = puntos.Near(appmain.hFcad.Xreal(mousex))
        Me.SelStartYr = puntos.Near(appmain.hFcad.Yreal(mouseY))

        ' prevenir acciones tontas como hacer click en otro elemento antes de terminar con el actual
        ' TODO: reparar -> appmain.hFCAD.DesHabilitarBotones
    Else If Me.PointsDone = 2 Then ' acabo de marcar el punto destino
        ' permitir otros trabajos
        ' TODO: reparar -> appmain.hFCAD.HabilitarBotones

        clsEntities.ClonElements(True, True) ' let make a copy of them
        ' and now we move
        clsEntities.Move(Me.SelEndXr - Me.SelStartXr, Me.SelEndyr - Me.SelStartYr, True)
        clsEntities.Finish()

        Me.Finish

    Endif

End

Public Function MouseMove(mouseX As Integer, mouseY As Integer) ' called by FCAD-> DrawingArea_MouseMove

    If Me.PointsDone = 1 Then
        ' we compare Real values from the starting point to the location
        ' represente by the mouse now, taking account that the drawing
        ' could have being moved by the mouse wheel

        ' new Real position is
        Me.SelEndXr = puntos.Near(appmain.hFcad.Xreal(mouseX))
        Me.SelEndyr = puntos.Near(appmain.hFcad.Yreal(mouseY))

        If gcd.Orthogonal Then

            If Abs(Me.SelEndXr - Me.SelStartXr) > Abs(Me.SelEndyr - Me.SelStartYr) Then ' X prevails

                Me.SelEndyr = Me.SelStartYr

            Else

                Me.SelEndXr = Me.SelStartXr

            Endif

        End If

        Me.glTranslate[0] = Me.SelEndXr - Me.SelStartXr
        Me.glTranslate[1] = Me.SelEndyr - Me.SelStartYr
        Me.glTranslate[2] = 0

    End If
    gcd.Redraw

End
