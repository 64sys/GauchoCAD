' Gambas class file

' Tool maintained by Terco

' this is the Main Job, either we are doing this or other job
Inherits ToolsBase
Create Static
Public Const GENDER As String = "ZoomW"


Public Function Start(Optional ElemToBuild As Variant, Optional _Mode As Integer = 0) As Boolean
    ' Modes:
    '       0 = Move, all points in the element must be selected, or click on it.
    '       1 = Stretch, selection may be partial, each element is called to see if the support stretching

    Me.Mode = _Mode

End

Public Function MouseDown() ' esta rutina es llamada por FCAD en el evento DrawingArea_MouseDown

      If Mouse.Left Then
        Me.SelStartX = mouse.x
        Me.SelStartY = mouse.y
        Me.SelEndX = Me.SelStartX
        Me.SelEndy = Me.SelStartY
        
        Me.SelStartXr = APPMain.hFCAD.Xreal(Mouse.x)
        Me.SelStartYr = APPMain.hFCAD.Yreal(Mouse.y)
      
        
        Me.Active = True
    End If

End

Public Function MouseUp() ' esta rutina es llamada por FCAD en el evento DrawingArea_MouseUp

    Me.SelEndX = mouse.x
    Me.SelEndy = mouse.y
    Me.Active = False

    ' corrijo para start<end
    If Me.SelStartX > Me.SelEndX Then Swap Me.SelStartX, Me.SelEndX
    If Me.SelStartY < Me.SelEndy Then Swap Me.SelStartY, Me.SelEndy                     ' this is FLIPPED

   

    ' Paso a coordenadas reales
    Me.SelStartXr = appmain.hFcad.Xreal(Me.SelStartX)
    Me.SelStartYr = appmain.hFcad.Yreal(Me.SelStartY)
    Me.SelEndXr = appmain.hFcad.Xreal(Me.SelEndX)
    Me.SelEndyr = appmain.hFcad.Yreal(Me.SelEndy)

    ' veo si el rectangulo es suficientemente grande como para representar una seleccion por rectangulo
    If (Me.SelEndX - Me.SelStartX + (-Me.SelEndy + Me.SelStartY)) < 10 Then ' es un rectangulo minusculo
        
        clsDrawingAids.ErrorMessage = ("Window is too small")
        
        
    Else
        ' engaÃ±amos a estas vars
        
        appmain.hFCAD.Xmayor = Me.SelEndXr
        appmain.hFCAD.Xmenor = Me.SelStartXr
        
        appmain.hFCAD.Ymayor = Me.SelEndYr
        appmain.hFCAD.Ymenor = Me.SelStartYr
        
        cadZoomE.Start(, 1)
        Me.Finish

    End If


End

Public Function MouseMove() ' esta rutina es llamada por FCAD en el evento DrawingArea_MouseMove

    Me.SelEndX = Mouse.X
    
    Me.SelEndy = Mouse.y
    
    Me.SelEndXr = APPMain.hFCAD.Xreal(Mouse.x)
    Me.SelEndYr = APPMain.hFCAD.Yreal(Mouse.y)

   
    appmain.hFCAD.redraw


End


Public Sub Draw() ' esta rutina es llamada por FCAD en el evento DrawingArea_Draw
    ' por ultimo, y para que se vea arriba, la seleccion

    If Not Me.Active Then Return
 
    Dim xyStart, xyEnd As Float[]
    
    GLplus.Rectangle2D(Me.SelStartXr, Me.SelStartYr, Me.SelEndXr - Me.SelStartXr, Me.SelEndYr - Me.SelStartYr,,,,, Color.DarkBlue, 1, 2)


End

