' Gambas class file

' GauchoCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

' Tool maintained by Terco
Create Static
Public Const USEWITH As String = ""
' Add more if needed

Public SelStartX As Integer                         ' Sel = selection, where? Start/End , axis? X/Y
Public SelStartY As Integer
Public SelEndX As Integer
Public SelEndy As Integer

Public SelStartXr As Float                          ' same but in real space, METERS not pixel
Public SelStartYr As Float
Public SelEndXr As Float
Public SelEndyr As Float                            ' in the Real space, Y becomes Z axis

Public SelectionCount As Integer

Public PointsDone As Integer
Public PointsTotal As Integer
Public NextParamType As String          ' What kind of input the element expects P=point, F=float, C=color, S=string, M=mixed either Point, or Float that is taken from Max(Px-Px', Pz-Pz')
Public NextParamDefault As Variant      ' default value

Public Active As Boolean = False
Public PoiChecking As Boolean = False
Public EntityChecking As Boolean = False
Public Mode As Integer

Public inxSelected As New Integer[]

' this affects the gl Drawing list
Public glTranslate As New Float[]         ' dX, dY, dZ
Public glRotate As New Float[]            ' rX, rY, rZ
Public glAngle As Float                   ' deg
Public glScale As New Float[]             ' sX, sY, sZ

Public Sub _new()

  Me.glTranslate.Insert([0, 0, 0])         ' dX, dY, dZ
  Me.glRotate.Insert([0, 0, 1])            ' rX, rY, rZ
  Me.glAngle = 0                           ' deg
  Me.glScale.Insert([1, 1, 1])             ' sX, sY, sZ

End

Public Function MouseDown(mouseX As Integer, mouseY As Integer) ' called by FCAD-> DrawingArea_MouseDown

End

Public Function MouseUp(mouseX As Integer, mouseY As Integer) ' called by FCAD-> DrawingArea_MouseUp

End

Public Function MouseMove(mouseX As Integer, mouseY As Integer) ' called by FCAD-> DrawingArea_MouseMove

End

Public Sub Draw(Optional what As Object)               ' called by gcd.CurrentDrawing.drwArea_Draw

  gl.PushMatrix

  gl.Translatef(glTranslate[0], glTranslate[1], glTranslate[2])
  gl.Rotatef(glAngle, glRotate[0], glRotate[1], glRotate[2])
  gl.Scalef(glScale[0], glScale[1], glScale[2])
  gl.CallList(gcd.CurrentDrawing.GlListSelectedEntities)                      ' si GL no tiene contexto, la lista no se genera. Es necesario que la instancia de FCAD este cargada.

  gl.PopMatrix

End

Public Function KeyText(EnteredText As String) ' esta rutina es llamada por FCAD en el evento FCAD_KeyPress cuando recibe una texto + <Enter>

End

Public Sub Finish()

  gcd.CurrentDrawing.iEntity.Clear
  gcd.CurrentDrawing.iEntity.Insert([0, 0, -1, -1])
  gcd.clsJobPrevious = Me
  gcd.clsJob = clsDefaultJob
  clsDrawingAids.CleanTexts
  clsEntities.DeSelection()
  gcd.DrawOriginals = False
  appmain.regen
  Me.Active = False
  gcd.ToolActive = False

End

Public Sub Cancel()

  gcd.clsJobPrevious = Me
  gcd.clsJob = clsDefaultJob
  clsDrawingAids.CleanTexts
  appmain.redraw

End
