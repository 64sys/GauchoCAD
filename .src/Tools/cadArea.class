' Gambas class file

' m-designer
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

' Tool maintained by Terco
Inherits ToolsBase
Create Static
Public Const Gender As String = "Area"
Private clpPolygon As New Polygon
Private Poli As New Float[]

Public Function Start(Optional ElemToBuild As Variant, Optional _Mode As Integer = 0) As Boolean
  ' Llamada por FCAD al inicio de la aplicacion de esta herramienta

  Dim i As Integer
  ' Aprovechamos para establecer los helpers (comentarios de ayuda en pantalla)
  Me.PointsDone = 0
  Me.PointsTotal = 1e10

  DrawingAids.HelperTrabajo = ("Area") & " : " & ("mark points")
  Poli.Add(0)
  Poli.Add(0)
  clpPolygon.Add(0, 0)

  Me.Active = True
  gcd.ToolActive = True

End

Public Function MouseUp(mouseX As Integer, mouseY As Integer)

  Dim i As Integer

  Inc Me.PointsDone

  Me.SelEndXr = gcd.Near(gcd.Xreal(mousex))
  Me.SelEndyr = gcd.Near(gcd.Yreal(mouseY))

  clpPolygon[clpPolygon.Max].X = Me.SelEndXr
  clpPolygon[clpPolygon.Max].Y = Me.SelEndYr
  Poli[Poli.max - 1] = Me.SelEndXr
  Poli[Poli.max] = Me.SelEndYr

  clpPolygon.Add(Me.SelEndXr, Me.SelEndYr)
  Poli.Add(Me.SelEndXr)
  Poli.Add(Me.SelEndYr)

End

Public Function MouseMove(mouseX As Integer, mouseY As Integer) ' called by FCAD-> DrawingArea_MouseMove

  If Poli.Count = 0 Then Return
  Me.SelEndXr = gcd.Near(gcd.Xreal(mouseX))
  Me.SelEndyr = gcd.Near(gcd.Yreal(mouseY))
  Poli[Poli.max - 1] = Me.SelEndXr
  Poli[Poli.max] = Me.SelEndYr
  clpPolygon[clpPolygon.Max].X = Me.SelEndXr
  clpPolygon[clpPolygon.Max].Y = Me.SelEndYr

  gcd.Redraw
  ' fMain.regen

End

Public Sub Draw()               ' called by gcd.CurrDrawing.drwArea_Draw

  Dim fColor4 As Integer
  ' testing
  ' poli.Clear
  ' poli.Insert([0, 0, 0, 10, 10, 10, 10, 0, 8, 0, 8, 8, 2, 8, 2, 0])
  '
  ' Print "inside?", puntos.InsideTriangle([10, 10], [8, 0], [8, 8], [2, 8])
  '
  ' Print "inside nuevo?", puntos.IsPointInTri([10, 10], [8, 0], [8, 8], [2, 8])
  '
  ' Print "inside2?", puntos.InsideTriangle([0.0, 0.0], [0, 10], [10, 10], [2, 8])
  ' Print "insidenuevo 2?", puntos.IsPointInTri([0.0, 0.0], [0, 10], [10, 10], [2, 8])
  If puntos.IsPoligonSelfIntersecting(poli) Then
    fColor4 = Color.RGB(255, 0, 100, 200)
  Else
    fColor4 = Color.RGB(0, 100, 255, 200)

  End If
  glPlus.TRIANGLES(puntos.PolygonTriangulation(Poli), fColor4, fColor4)
  glPlus.Polygon(Poli, Color.blue, 1)

End

Public Function KeyText(EnteredText As String) ' esta rutina es llamada por FCAD en el evento FCAD_KeyPress cuando recibe una texto + <Enter>

  If EnteredText = "" Then        'enter

    Me.Finish

  End If

  ' catch

  DrawingAids.ErrorMessage = ("Bad input")

End

Public Sub Finish()

  Dim i As Integer, ip As Integer, Prot As New Float[]

  If Me.PointsDone > 2 Then

    DrawingAids.HelperTrabajo = ("Area") & " = " & Str(puntos.PoligonArea(poli)) & " - " & ("Perimeter") & " = " & Str(puntos.PoligonLength(poli, True))
    clpPolygon.Simplify(Clipper.FillEvenOdd)

    Debug "Segun Clipper ", clpPolygon.Area

  Endif

  gcd.clsJobPrevious = Me
  gcd.clsJob = clsDefaultJob
  clsEntities.DeSelection()

  Me.Active = False
  gcd.ToolActive = False

End
