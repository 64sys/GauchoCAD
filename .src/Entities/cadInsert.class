' Gambas class file

' GauchoCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA
Create Static
Inherits EntityBase

Public Const Gender As String = "Insert"
Public Const HelperTrabajo As String = ("Inserts a block")
Public Const ParamType As String = "TPFFF"
Public Const ParamHelper As String = ("BlockName; Position ; X scale ; Y scale ; Rotation")
Public Const ParamDefault As String = "<no name>; 0,0 ; 1 ;1 ; 0"

Public Sub Draw(oE As Entity)

    '
    Dim ET As Entity, i As Integer

    i = clsEntities.FIndBlockID(oE.Block)
    If i < 0 Then Return

    gl.PushMatrix
    gl.Translatef(appmain.hFcad.pixels(oE.p[0]) / appmain.hFcad.ScaleZoom, appmain.hFcad.pixels(oE.p[1]) / appmain.hFcad.ScaleZoom, 0)
    gl.Rotatef(oE.fParam[2], 0, 0, 1)
    gl.Scalef(oE.fParam[0], oE.fParam[1], 1)

    ' modCAD.ScaleLines = (Abs(oE.fParam[0]) + Abs(oE.fParam[1])) / 2   ' ??????????????????
    For Each ET In appmain.hFCAD.arrBlocks[i].entities
        et.visible = True
        'If et.gender = "Ellipse" Then Stop
        et.ClassHandler.Draw(et)
    Next
    'modCAD.ScaleLines = 1
    gl.PopMatrix

End

Public Function Draw2(oE As Entity)

    If Not oE.Visible Then Return

    If oE.Selected And Not modCAD.ToolActive Then oE.ColorToPaint = modCAD.ColorForSelected Else oE.ColorToPaint = modCAD.GetGBColor(oE.colour, oE.Layerid)
    Dim ET As Entity, i As Integer
    paint.save
    paint.Translate(appmain.hFcad.pixels(oE.p[0]) / appmain.hFcad.ScaleZoom, appmain.hFcad.pixels(oE.p[1]) / appmain.hFcad.ScaleZoom)
    paint.Scale(oE.fParam[0], oE.fParam[1])
    paint.Rotate(oE.fParam[2])
    modCAD.ScaleLines = (Abs(oE.fParam[0]) + Abs(oE.fParam[1])) / 2
    For Each ET In appmain.hFCAD.arrBlocks[i].entities
        et.Draw
    Next
    modCAD.ScaleLines = 1
    paint.Restore

End
