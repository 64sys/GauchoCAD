' Gambas class file

' GauchoCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

Inherits EntityBase
Public Const GENDER As String = "Insert"
Public Const HelperTrabajo As String = ("Inserts a block")
Public Const ParamType As String = "TPFFF"
Public Const ParamHelper As String = ("BlockName; Position ; X scale ; Y scale ; Rotation")
Public Const ParamDefault As String = "<no name>; 0,0 ; 1 ;1 ; 0"

Public obxInsertos As New Object[]
Public ParentBlock As String

Public Sub Draw()

    '
    Dim ET As Object, i As Integer

    i = clsEntities.FIndBlockID(Me.Block)
    If i < 0 Then Return
    If modCAD.drwDrawingClass = modCAD.drwPaintClass Then
        paint.save
        paint.Translate(appmain.hFcad.pixels(Me.p[0]) / appmain.hFcad.ScaleZoom, appmain.hFcad.pixels(Me.p[1]) / appmain.hFcad.ScaleZoom)
        paint.Scale(Me.fParam[0], Me.fParam[1])
        paint.Rotate(Me.fParam[2])
        modCAD.ScaleLines = (Abs(Me.fParam[0]) + Abs(Me.fParam[1])) / 2
        For Each ET In appmain.hFCAD.arrBlocks[i].entities
            et.Draw
        Next
        modCAD.ScaleLines = 1
        paint.Restore

    End If

    If modCAD.drwDrawingClass = modCAD.drwOpenGLClass Then

        gl.PushMatrix
        gl.Translatef(appmain.hFcad.pixels(Me.p[0]) / appmain.hFcad.ScaleZoom, appmain.hFcad.pixels(Me.p[1]) / appmain.hFcad.ScaleZoom, 0)
        gl.Rotatef(Me.fParam[2], 0, 0, 1)
        gl.Scalef(Me.fParam[0], Me.fParam[1], 1)

        ' modCAD.ScaleLines = (Abs(Me.fParam[0]) + Abs(Me.fParam[1])) / 2   ' ??????????????????
        For Each ET In appmain.hFCAD.arrBlocks[i].entities
            et.Draw
        Next
        'modCAD.ScaleLines = 1
        gl.PopMatrix

    Endif

End

Public Sub Finish(ParamsDone As Integer) As Boolean

    ' ' we set the block property of all entities selected
    '
    ' ' if an entitty is part of other block, we look for that block
    ' Dim e As Object, iBlock As Integer
    '
    ' iBlock = clsEntities.GetFreeBlockNumber()
    ' Me.fParam.add(iBlock)
    Me.Finished = True
    Me.B.Resize(Me.P.Count)

    ' For Each e In APPMain.hFCAD.arrEntities
    '     If e.Selected Then                      ' parto of this
    '         If e.Block > 0 Then                   ' entity is part of a block
    '
    '             ' nothing to do, as we will find the block and make it part of this one
    '
    '         Else
    '             e.Block = iBlock
    '         End If
    '
    '     Endif
    '
    ' Next

End
