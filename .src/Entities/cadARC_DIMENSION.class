' Gambas class file

' m-designer
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA
Create Static
Inherits Caddimension

Public Const Gender As String = "Arc_Dimension"
Public Const DrawingOrder As Integer = 100 ' 1 a 32.724 esto debe Drawse primero y ser sobreescrito por el resto
Public Const PointsToDraw As Integer = 1             ' minimal point requered for drawing something usefull
Public Const HelperTrabajo As String = ("Insert a linear acotation")
Public Const ParamType As String = "PPPP"                             ' that is Point, Point, Float; could be Color Text, etc
Public Const ParamHelper As String = "Center of arc;First point;Secont point;extension"

Public Function ImportDXF(e As Entity, sClaves As String[], sValues As String[]) As Boolean

  Dim i As Integer
  Dim DimTypeSet As Boolean

  DimTypeSet = False
  For i = 0 To sClaves.Max

    If sClaves[i] = "2" Then e.pBlock = clsEntities.FIndBlock(sValues[i])   ' this could be null
    If sClaves[i] = "10" Then e.p.Add(CFloat(sValues[i]))         ' X0
    If sClaves[i] = "20" Then e.P.Add(CFloat(sValues[i]))         ' Y0

    '
  Next
  '
  ' ' en algunos DXF el codigo 70 no esta
  ' If Not DimTypeSet Then e.ClassHandler = cadDIMENSION_LINEAR

  ' tengo q presuponer que las escalas son = 1
  e.fParam[Me.ipaEscX] = 1    ' esc X
  e.fParam[Me.ipaEscY] = 1    ' esc Y
  e.fParam[Me.ipaEscZ] = 1    ' esc Z

  ' TODO: cuando este terminada la entidad, sacar eso
  e.pBlock.AbsoluteCoords = True

  Return True

  '' catch

  Return False

End

Public Function NewParameter(eBuild As Entity, vParam As Variant[], Optional Definitive As Boolean = False) As Boolean

  ' la linea solo recibe puntos

  If vParam[0] <> "point" Then Return False

  If Me.StepsDone = 0 Then
    Me.DimType = gcd.dimAligned

    Try eBuild.P[0] = vParam[1]
    Try eBuild.P[1] = vParam[2]
    eBuild.P[2] = eBuild.P[0]
    eBuild.P[3] = eBuild.P[1]
    If definitive Then Return True
  Else If Me.StepsDone = 1 Then
    eBuild.DrawAble = True
    eBuild.Finished = True
    Try eBuild.P[2] = vParam[1]
    Try eBuild.P[3] = vParam[2]
    eBuild.P[4] = eBuild.P[2]
    eBuild.P[5] = eBuild.P[3]

    eBuild.pBlock = ReBuildBlock(eBuild)
    If definitive Then Return True
  Else If Me.StepsDone = 2 Then
    eBuild.DrawAble = True
    eBuild.Finished = True
    Try eBuild.P[4] = vParam[1]
    Try eBuild.P[5] = vParam[2]
    eBuild.P[6] = eBuild.P[4]
    eBuild.P[7] = eBuild.P[5]

    eBuild.pBlock = ReBuildBlock(eBuild)
    If definitive Then Return True
  Else If Me.StepsDone = 3 Then
    eBuild.DrawAble = True
    eBuild.Finished = True
    Try eBuild.P[6] = vParam[1]
    Try eBuild.P[7] = vParam[2]

    eBuild.pBlock = ReBuildBlock(eBuild)
    If definitive Then Return True

  Endif

End

Public Sub ReBuildBlock(ELEM As Entity) As Block

  Dim d As Float, flxTextExt As Float[]
  Dim fRotXY As Float[]

  Dim newBlock As New Block
  Dim f1, f2 As New Float[]

  newBlock.entities = New Entity[]

  ' para definir este bloque necesito 6 entidades
  Dim eLineaPpal As Entity
  Dim eOblique1 As Entity       ' tambien pueden ser flechas Solid
  Dim eOblique2 As Entity
  Dim eExtension1 As Entity
  Dim eExtension2 As Entity
  Dim eDot1 As Entity
  Dim eDot2 As Entity
  Dim eText As Entity
  Dim ePoint2 As Entity

  ' vemos los estilos
  If elem.fParam[Me.ipaStyleTextHeigth] > 0 Then Me.DimTextHeight = elem.fParam[Me.ipaStyleTextHeigth] Else Me.DimTextHeight = elem.pStyle.fTxtHeight_140
  If elem.fParam[Me.ipaStyleArrowSize] > 0 Then Me.DimArrowSize = elem.fParam[Me.ipaStyleArrowSize] Else Me.DimArrowSize = elem.pStyle.fArrowSize_41
  Me.DimArrowWidth = Me.DimArrowSize / 3

  ' la linea principal ahora es un arco
  clsEntities.Addarc(newBlock.entities, [0.0, 0.0], 0, 0, 0, elem.colour, elem.LineWidth, elem.LineType.Index, elem.pLayer)
  eLineaPpal = newBlock.entities.Last

  ' lineas de demarcacion
  clsEntities.AddLine(newBlock.entities, [0, Me.DimExtension, 0, -Me.DimExtension], elem.colour, elem.LineWidth, elem.LineType.Index, elem.pLayer)
  eExtension1 = newBlock.entities.Last

  clsEntities.AddLine(newBlock.entities, [0, Me.DimExtension, 0, -Me.DimExtension], elem.colour, elem.LineWidth, elem.LineType.Index, elem.pLayer)
  eExtension2 = newBlock.entities.Last

  ' flechas

  clsEntities.Addsolid(newBlock.entities, [0, 0, Me.DimArrowSize, Me.DimArrowWidth, Me.DimArrowSize, -Me.DimArrowWidth, 0, 0], elem.colour, elem.LineWidth, elem.LineType.Index, elem.pLayer)
  eOblique1 = newBlock.entities.Last

  clsEntities.Addsolid(newBlock.entities, [0, 0, -Me.DimArrowSize, Me.DimArrowWidth, -Me.DimArrowSize, -Me.DimArrowWidth, 0, 0], elem.colour, elem.LineWidth, elem.LineType.Index, elem.pLayer)
  eOblique2 = newBlock.entities.Last

  ' texto
  clsEntities.AddMText(newBlock.entities, [0.0, 0.0, 0.0, 0.0], 0, Me.DimTextHeight, "0.00", elem.colour, elem.LineWidth, elem.LineType.Index, elem.pLayer)
  eText = newBlock.entities.Last

  ' -> el bloque

  elem.fParam[cadInsert.ipaEscX] = 1      ' ScaleX del inserto
  elem.fParam[cadInsert.ipaEscY] = 1      ' ScaleY del inserto
  elem.fParam[cadInsert.ipaEscZ] = 1      ' ScaleY del inserto

  elem.Visible = True

  '
  eLineaPpal.fParam[0] = 0          ' radio
  eLineaPpal.fParam[1] = Ang(elem.P[2] - elem.P[0], elem.P[3] - elem.P[1]) * 180 / Pi

  '
  ' las lineas de extension (las hago HORIZONTALES y las roto)
  eExtension1.P.Clear
  eExtension1.P.Insert([-Me.DimExtension, 0, Me.DimExtension, 0])
  eExtension2.P.Clear
  eExtension2.P.Insert([-Me.DimExtension, 0, Me.DimExtension, 0])

  ' flechas
  eOblique1.P.Clear
  eOblique1.P.Insert([0, 0, -Me.DimArrowWidth, Me.DimArrowSize, Me.DimArrowWidth, Me.DimArrowSize, 0, 0])

  eOblique2.P.Clear
  eOblique2.P.Insert([0, 0, -Me.DimArrowWidth, -Me.DimArrowSize, Me.DimArrowWidth, -Me.DimArrowSize, 0, 0])
  '

  ' 2========================================================================================
  ' nuevo radio
  d = puntos.distancia(elem.P[0], elem.P[1], elem.P[6], elem.P[7])
  eLineaPpal.fParam[0] = d          ' radio del arco

  eLineaPpal.fParam[2] = Ang(elem.P[4] - elem.P[0], elem.P[5] - elem.P[1]) * 180 / Pi
  '

  ' ' la sexta es el texto
  If (eLineaPpal.fParam[2] - eLineaPpal.fParam[1]) < 0 Then eLineaPpal.fParam[2] += 360

  elem.fParam[cadDimension.ipaRealMeasure] = (eLineaPpal.fParam[2] - eLineaPpal.fParam[1]) / 360 * 2 * puntos.distancia(elem.P[0], elem.P[1], elem.P[4], elem.P[5]) * Pi

  eText.StringData[0] = "L " & Format(elem.fParam[cadDimension.ipaRealMeasure], Me.DimFormatAng)

  fRotXY = puntos.RotateFromPointWithAngle(elem.P[0], elem.P[1], (eLineaPpal.fParam[2] - eLineaPpal.fParam[1]) / 180 * Pi / 2, elem.P[2], elem.P[3])
  '
  flxTextExt = glPlus.MTextExtends(eText.StringData[cadMText.sdaText], 0, 0, eText.fParam[1])
  '
  eText.P[0] = fRotXY[0] - elem.P[0]
  eText.P[1] = fRotXY[1] - elem.P[1]
  eText.fParam[cadMText.ipaTextAngle] = (eLineaPpal.fParam[2] + eLineaPpal.fParam[1]) / 2 - 90

  ' 3 ===========================================================================

  ' roto
  eExtension1.ClassHandler.Rotate(eExtension1, eLineaPpal.fParam[1] / 180 * Pi)
  eExtension2.ClassHandler.Rotate(eExtension2, eLineaPpal.fParam[2] / 180 * Pi)
  eOblique1.ClassHandler.Rotate(eOblique1, eLineaPpal.fParam[1] / 180 * Pi)
  eOblique2.ClassHandler.Rotate(eOblique2, eLineaPpal.fParam[2] / 180 * Pi)

  ' muevo
  fRotXY = puntos.RotateFromPointWithAngle(elem.P[0], elem.P[1], eLineaPpal.fParam[1] / 180 * Pi, d + elem.P[0], elem.P[1])
  ' traslado una flecha y una linea de extension
  eExtension1.ClassHandler.Translate(eExtension1, fRotXY[0] - elem.P[0], fRotXY[1] - elem.P[1])
  eOblique1.ClassHandler.Translate(eOblique1, fRotXY[0] - elem.P[0], fRotXY[1] - elem.P[1])

  ' muevo
  fRotXY = puntos.RotateFromPointWithAngle(elem.P[0], elem.P[1], eLineaPpal.fParam[2] / 180 * Pi, d + elem.P[0], elem.P[1])
  ' traslado las otras
  eExtension2.ClassHandler.Translate(eExtension2, fRotXY[0] - elem.P[0], fRotXY[1] - elem.P[1])
  eOblique2.ClassHandler.Translate(eOblique2, fRotXY[0] - elem.P[0], fRotXY[1] - elem.P[1])

  ' la sexta es el texto

  fRotXY = puntos.RotateFromPointWithAngle(elem.P[0], elem.P[1], (eLineaPpal.fParam[2] + eLineaPpal.fParam[1]) / 180 * Pi / 2, d + elem.P[0], elem.P[1])

  eText.P[0] = fRotXY[0] - elem.P[0]
  eText.P[1] = fRotXY[1] - elem.P[1]

  ' el largo de la linea principal viene dado por la distancia entre ambos puntos
  d = puntos.distancia(elem.P[0], elem.P[1], elem.P[2], elem.P[3])

  ' con este click calculo el angulo
  'elem.fParam[cadInsert.ipaRotacion] = Ang(elem.p[2] - elem.P[0], elem.p[3] - elem.P[1]) * 180 / Pi

  ' X0

  '===========================================
  Return newBlock

End

' Importo los datos que puedo procesar de una coleccion y genero un Entity para ser agregado a un array
Public Function ImportJsonCol(c As Collection, e As Entity) As Boolean

  e.fParam.Resize(Me.TotalParams)

  '     "entity": "ARC_DIMENSION",
  '     "index": 287,
  '     "type": 515,
  '     "handle": [0, 4605],
  '     "size": 1928,
  '     "bitsize": 15276,
  '     "preview_exists": 1,
  '     "reactors": [
  '       [4, 2, 4628, 4628]
  '     ],
  '     "xdicobjhandle": [3, 2, 4618, 4618],
  '     "_subclass": "AcDbEntity",
  '     "prev_entity": [12, 1, 7, 4598],
  '     "next_entity": [10, 1, 125, 4730],
  '     "layer": [5, 2, 5261, 5261],
  '     "preview_exists": 1,
  '     "preview_is_proxy": 0,
  '     "preview_size": 1728,
  '     "preview
  '     "entmode": 2,
  '     "nolinks": 0,
  '     "color": 256,
  '     "ltype_scale": 1.0,
  '     "ltype_flags": 0,
  '     "plotstyle_flags": 0,
  '     "invisible": 0,
  '     "linewt": 29,
  '     "_subclass": "AcDbDimension",
  '     "extrusion": [0.0, 0.0, 1.0],
  '     "text_midpt": [380.92928572639323, 139.3416183844374],
  '     "elevation": 0.0,
  '     "flag1": 11,
  '     "user_text": "",
  '     "text_rotation": 0.0,
  '     "horiz_dir": 0.0,
  '     "ins_scale": [1.0, 1.0, 1.0],
  '     "ins_rotation": 0.0,
  '     "attachment": 5,
  '     "lspace_style": 1,
  '     "lspace_factor": 1.0,
  '     "act_measurement": 26.17270411733045,
  '     "clone_ins_pt": [0.0, 0.0],
  '     "flag": 128,
  '     "_subclass": "AcDbArcDimension",
  '     "def_pt": [389.46058701155391, 138.87772148201296, 0.0],
  '     "xline1_pt": [394.56365099510407, 126.11381094252646, 0.0],
  '     "xline2_pt": [378.5734835508681, 120.49165811629108, 0.0],
  '     "center_pt": [386.64514277068076, 123.08494339705997, 0.0],
  '     "is_partial": 0,
  '     "arc_start_param": 0.36533394824646,
  '     "arc_end_param": 3.45245880810067,
  '     "has_leader": 0,
  '     "leader1_pt": [394.56365099510407, 126.11381094252646, 0.0],
  '     "leader2_pt": [378.5734835508681, 120.49165811629108, 0.0],
  '     "dimstyle": [5, 1, 57, 57],
  '     "block": [5, 2, 4606, 4606]

  e.P.Add(c["center_pt"][0])
  e.P.Add(c["center_pt"][1])

  e.P.Add(c["xline1_pt"][0])
  e.P.Add(c["xline1_pt"][1])

  e.P.Add(c["xline2_pt"][0])
  e.P.Add(c["xline2_pt"][1])

  e.P.Add(c["def_pt"][0])
  e.P.Add(c["def_pt"][1])

  e.fParam[Me.ipaEscX] = 1
  e.fParam[Me.ipaEscY] = 1
  e.fParam[Me.ipaEscZ] = 1

  'e.fParam[Me.ipaRotacion] = CFloat(c["dim_rotation"]) * 180 / Pi

  Dim hBlock As Integer

  e.Block = gcd.CurrentDrawing.cmodel["BLOCKS"][c["block"][3]]["block_entity"][3]
  e.pBlock = ReBuildBlock(e)
  'e.Block = gcd.CurrentDrawing.arrBlocks[clsEntities.FIndBlockIDbyHandle(hBlock)].name
  ' "block": [5, 2, 3228, 3228] '  esto apunta a cModel["BLOCKS"] , pero hay q buscar otra cosa

  Return True

Catch

  Return False

End
