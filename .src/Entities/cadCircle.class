' Gambas class file

' GauchoCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA
Create Static
'Fast

Public Const Gender As String = "Circle"
Public Const PointsToDraw As Integer = 1             ' minimal point requered for drawing something usefull
Public Const HelperTrabajo As String = ("Draw a circle")
Public Const ParamType As String = "PL"                             ' that is Point, Point, Float; could be Color Text, etc
Public Const ParamHelper As String = ("Start point;Radious")      ' a little text that is shown at the prompt waiting for user input during build
Public Const ParamDefault As String = " ; 1 "
Public Const GAMBASCADENTITY As String = ("EntityBase")
Public Const USEWITH As String = "clsEntityBuilder"
Public Const DrawingOrder As Integer = 0        ' 1 = draws first
Public Const OrtogonalIgnorado As Boolean = False
Public Const OrtogonalForzado As Boolean = False
Public Const StretchAble As Boolean = True           ' Si lo puedo deformar
Public Selected As Boolean
Public ForDeletion As Boolean = True        ' this must be falsed in Finish
Public DrawAble As Boolean = False          ' True si durante la construccion ya tiene suficientes elementos para poder hacer una representacion digna
Public Visible As Boolean = True            ' si esta entidad puede ser mostrada independientmente
Public Finished As Boolean = False          ' colocar en true cuando se llegue a completar
Public StepsDone As Integer                 ' esto lo cambia cls ElementBuilder durante la construccion

Public Sub Draw(oE As Entity)

    Dim x, y, theta, angle_increment As Float

    If Not oE.Visible Then Return

    If oE.Selected And Not modCAD.ToolActive Then oE.ColorToPaint = modCAD.ColorForSelected Else oE.ColorToPaint = modCAD.GetGBColor(oE.colour, oE.Layerid)

    oE.polyline.Clear
    GL.Begin(gl.LINE_STRIP)
    angle_increment = Pi * 2 / 360
    For theta = 0 To 2 * Pi Step angle_increment
        ' el punto considerando 0,0 al centro
        x = oE.p[0] + oE.fParam[0] * Cos(theta)
        y = oE.p[1] + oE.fParam[0] * Sin(theta)
        oE.polyline.Add(x)
        oE.polyline.Add(y)
        GLplus.Vertex2D(x, y, oE.ColorToPaint)
    Next
    gl.End

End

'' A fat version of the entity
Public Sub DrawRemark(oE As Entity)

    GLplus.PolyLines(oE.PolyLine, modCAD.WindowBackColor, oE.LineWidth, gcd.stiDashed)
    GLplus.PolyLines(oE.PolyLine, oE.ColorToPaint, oE.LineWidth + 2, oE.LineType)

End

Public Function Draw2(oE As Entity)

    If Not oE.Visible Then Return

    If oE.Selected And Not modCAD.ToolActive Then oE.ColorToPaint = modCAD.ColorForSelected Else oE.ColorToPaint = modCAD.GetGBColor(oE.colour, oE.Layerid)

    paint.LineWidth = oE.LineWidth / appmain.hFcad.ScaleZoom / modCAD.ScaleLines

    paint.brush = Paint.Color(oE.ColorToPaint)

    paint.Arc(oE.p[0], oE.p[1], oE.fParam[0])

    paint.Stroke

End
'' Creo los puntos de interes
'' Build point of interest

Public Function BuildPOI(oE As Entity, Optional arrIndex As Integer = -1) As Integer

End
' This function will return False if the element couldn't be created for some reason: bad or incomple user input
' True means all is good, False will instruct the clsEntityBuilder to delete it

Public Sub Finish(oE As Entity, ParamsDone As Integer) As Boolean

    'Print "Finish en EntityBase"
    'CreatePolygon(oe)
    BuildPOI(oe)

    ' busco el tipo de linea, si hace falta
    If oE.LineTypeName = "Dashed" Then oE.LineType = 1
    ' tareas finales de armado del objeto
    oE.b.resize(oE.P.count)
    oE.psel.resize(oE.p.count / 2)
    oE.ForDeletion = False
    oE.DrawAble = True
    oE.Selected = False
    oE.Finished = True

    If Not True Then

        oE.ForDeletion = True
        oE.DrawAble = False

    End If

End