' Gambas class file

' GauchoCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

' SAVE from this vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
' IMPORTANT: ALL CHANGES HERE MUST BE TRANSLATED TO cadLoad/Save and clsEntities.CopyElementData()                                                                                    |
Public Gender As String = ""
Public P As New Float[]                     '' X,Y pairs
Public Level As New Float[]                 '' The future Z or elevation
Public StringData As New String[]           '' Split with "|" separator if neccesary, that's is Entity specific.
Public fParam As New Float[]                '' Array of floats
Public Layer As String = "0"                '' Capa o Layer que se guarda en el archivo
Public colour As Integer                    '' 0=by layer, 1=by block, 10+=16 bit color code  ;  ths is not the color to be draw, ColorToPaint is, set in Finish()
Public LineTypeName As String               '' Continuous, dashed , etc
Public LineWidth As Integer = 1             '' This is it
' SAVE to here  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

' NOT SAVED
' construction and usage vars
Public Block As String                      '' Para tener la posibilidade de juntar cosas en un block
Public RefPointX As Float                   '' New
Public RefPointY As Float
Public ClassHandler As Object               '' The class used for drawing, creating and other stuff any particular entity
Public LineType As Integer                  '' 0=continuous, 1=dashed from flxDash
Public LayerId As String = "00"             '' Esta variable es la Key en la coleccion de layers
Public BlockNumber As Integer
Public iInsert As Integer = -1
Public ColorToPaint As Integer              '' Este es el color que realmente se va a dibujar
Public Selected As Boolean                  '' The entity is selected in drawing
Public ForDeletion As Boolean = True        '' This must be falsed in Finish
Public DrawAble As Boolean = False          '' True si durante la construccion ya tiene suficientes elementos para poder hacer una representacion digna
Public Visible As Boolean = True            '' Si esta entidad puede ser mostrada independientmente
Public Finished As Boolean = False          '' Colocar en true cuando se llegue a completar
Public Changed As Boolean
Public Handle As String
Public Group As Integer = 0                 '' Pertenecemos a un grupo?
Public Psel As New Boolean[]                '' Selected points
Public Polygon As New Float[]               '' This is a poligon built at element's contruction that defines a poligon used for detecting points inside me
Public PolyLine As New Float[]              '' This is a poliline built at element's contruction that defines a poligon used for detecting points inside me
Public PoiPoints As New Float[]             '' Point of interest
Public PoiType As New Integer[]
Public glDrwList As Integer                 '' drawing list
Public glDrwListSel As Integer              '' drawing list for selected item
Public glDrwListPOI As Integer              '' drawing list for POI
