' Gambas module file

Library "libGL"

Public Extern glCullFace(Mode As Integer)
Public Extern glFrontFace(Mode As Integer)
Public Extern glHint(iTarget As Integer, Mode As Integer)
Public Extern glLineWidth(fWidth As Single)
Public Extern glPointSize(fSize As Single)
Public Extern glPolygonMode(face As Integer, Mode As Integer)
Public Extern glScissor(x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
Public Extern glTexParameterf(iTarget As Integer, iPname As Integer, fParam As Single)
Public Extern glTexParameterfv(iTarget As Integer, iPname As Integer, slxParams As Float[])
Public Extern glTexParameteri(iTarget As Integer, iPname As Integer, iParam As Integer)
Public Extern glTexParameteriv(iTarget As Integer, iPname As Integer, inxParams As Integer[])
Public Extern glTexImage1D(iTarget As Integer, iLevel As Integer, iInternalFormat As Integer, iWidth As Integer, iBorder As Integer, iFormat As Integer, iType As Integer, pixels As Byte[]) ' verificar si funciona byte
Public Extern glTexImage2D(iTarget As Integer, iLevel As Integer, iInternalFormat As Integer, iWidth As Integer, iHeight As Integer, iBorder As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glDrawBuffer(iBuff As Integer)
Public Extern glClear(GiMaskBitField As Integer)
Public Extern glClearColor(red As Single, green As Single, blue As Single, alpha As Single)
Public Extern glClearStencil(s As Integer)
Public Extern glClearDepth(depth As Float)
Public Extern glStencilMask(mask As Integer)
Public Extern glColorMask(red As Byte, green As Byte, blue As Byte, alpha As Byte)
Public Extern glDepthMask(flag As Byte)
Public Extern glDisable(cap As Integer)
Public Extern glEnable(cap As Integer)
Public Extern glFinish()
Public Extern glFlush()
Public Extern glBlendFunc(sFactor As Integer, dFactor As Integer)
Public Extern glLogicOp(opcode As Integer)
Public Extern glStencilFunc(func As Integer, ref As Integer, mask As Integer)
Public Extern glStencilOp(fail As Integer, zfail As Integer, zpass As Integer)
Public Extern glDepthFunc(func As Integer)
Public Extern glPixelStoref(iPname As Integer, fParam As Single)
Public Extern glPixelStorei(iPname As Integer, iParam As Integer)
Public Extern glReadBuffer(src As Integer)
Public Extern glReadPixels(x As Integer, y As Integer, iWidth As Integer, iHeight As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glGetBooleanv(iPname As Integer, data As Byte[])
Public Extern glGetDoublev(iPname As Integer, data As Float[])
Public Extern glGetError() As Integer
Public Extern glGetsinglev(iPname As Integer, data As Single[])
Public Extern glGetIntegerv(iPname As Integer, data As Integer[])
Public Extern glGetString(name As Integer) As String
Public Extern glGetTexImage(iTarget As Integer, iLevel As Integer, iFormat As Integer, iType As Integer, pixels As Byte)
Public Extern glGetTexParameterfv(iTarget As Integer, iPname As Integer, params As Single[])
Public Extern glGetTexParameteriv(iTarget As Integer, iPname As Integer, params As Integer[])
Public Extern glGetTexLevelParameterfv(iTarget As Integer, iLevel As Integer, iPname As Integer, params As Single[])
Public Extern glGetTexLevelParameteriv(iTarget As Integer, iLevel As Integer, iPname As Integer, params As Integer[])
Public Extern glIsEnabled(cap As Integer) As Byte
Public Extern glDepthRange(n As Float, f As Float)
Public Extern glViewport(x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)

Public Extern glDrawArrays(Mode As Integer, first As Integer, iSize As Integer)
Public Extern glDrawElements(Mode As Integer, iSize As Integer, iType As Integer, indices As Byte[]) ' verificar si es byte
Public Extern glGetPointerv(iPname As Integer, params As Pointer)
Public Extern glPolygonOffset(factor As Single, units As Single)
Public Extern glCopyTexImage1D(iTarget As Integer, iLevel As Integer, internalformat As Integer, x As Integer, y As Integer, iWidth As Integer, iBorder As Integer)
Public Extern glCopyTexImage2D(iTarget As Integer, iLevel As Integer, internalformat As Integer, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer, iBorder As Integer)
Public Extern glCopyTexSubImage1D(iTarget As Integer, iLevel As Integer, xoffset As Integer, x As Integer, y As Integer, iWidth As Integer)
Public Extern glCopyTexSubImage2D(iTarget As Integer, iLevel As Integer, xoffset As Integer, yoffset As Integer, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
Public Extern glTexSubImage1D(iTarget As Integer, iLevel As Integer, xoffset As Integer, iWidth As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glTexSubImage2D(iTarget As Integer, iLevel As Integer, xOffset As Integer, yOffset As Integer, iWidth As Integer, iHeight As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glBindTexture(iTarget As Integer, texture As Integer)
Public Extern glDeleteTextures(n As Integer, textures As Integer[])
Public Extern glGenTextures(n As Integer, textures As Integer[])
Public Extern glIsTexture(texture As Integer) As Boolean

Public Extern glDrawRangeElements(Mode As Integer, start As Integer, iEnd As Integer, iSize As Integer, iType As Integer, indices As Byte[])
Public Extern glTexImage3D(iTarget As Integer, iLevel As Integer, iInternalFormat As Integer, iWidth As Integer, iHeight As Integer, iDepth As Integer, iBorder As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glTexSubImage3D(iTarget As Integer, iLevel As Integer, xOffset As Integer, yOffset As Integer, zOffset As Integer, iWidth As Integer, iHeight As Integer, iDepth As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glCopyTexSubImage3D(iTarget As Integer, iLevel As Integer, xOffset As Integer, yOffset As Integer, zOffset As Integer, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)

Public Extern glActiveTexture(texture As Integer)
Public Extern glSampleCoverage(value As Single, invert As Byte)
Public Extern glCompressedTexImage3D(iTarget As Integer, iLevel As Integer, internalformat As Integer, iWidth As Integer, iHeight As Integer, iDepth As Integer, iBorder As Integer, imagesize As Integer, data As Byte[])
Public Extern glCompressedTexImage2D(iTarget As Integer, iLevel As Integer, internalformat As Integer, iWidth As Integer, iHeight As Integer, iBorder As Integer, imagesize As Integer, data As Byte[])
Public Extern glCompressedTexImage1D(iTarget As Integer, iLevel As Integer, internalformat As Integer, iWidth As Integer, iBorder As Integer, imagesize As Integer, data As Byte[])
Public Extern glCompressedTexSubImage3D(iTarget As Integer, iLevel As Integer, xOffset As Integer, yOffset As Integer, zOffset As Integer, iWidth As Integer, iHeight As Integer, iDepth As Integer, iFormat As Integer, imagesize As Integer, data As Byte[])
Public Extern glCompressedTexSubImage2D(iTarget As Integer, iLevel As Integer, xOffset As Integer, yOffset As Integer, iWidth As Integer, iHeight As Integer, iFormat As Integer, imagesize As Integer, data As Byte[])
Public Extern glCompressedTexSubImage1D(iTarget As Integer, iLevel As Integer, xOffset As Integer, iWidth As Integer, iFormat As Integer, imagesize As Integer, data As Byte[])
Public Extern glGetCompressedTexImage(iTarget As Integer, iLevel As Integer, img As Byte[])

Public Extern glBlendFuncSeparate(sFactorRGB As Integer, dFactorRGB As Integer, sFactorAlpha As Integer, dFactorAlpha As Integer)
Public Extern glMultiDrawArrays(Mode As Integer, first As Integer[], count As Integer[], drawcount As Integer)
Public Extern glMultiDrawElements(Mode As Integer, count As Integer[], iType As Integer, indices As Integer[][], drawcount As Integer)
Public Extern glPointParameterf(iPname As Integer, fParam As Single)
Public Extern glPointParameterfv(iPname As Integer, flxParams As Single[])
Public Extern glPointParameteri(iPname As Integer, iParam As Integer)
Public Extern glPointParameteriv(iPname As Integer, inxParams As Integer[])
Public Extern glBlendColor(red As Single, green As Single, blue As Single, alpha As Single)
Public Extern glBlendEquation(Mode As Integer)

Public Extern glGenQueries(n As Integer, ids As Integer[])
Public Extern glDeleteQueries(n As Integer, ids As Integer[])
Public Extern glIsQuery(id As Integer) As Boolean
Public Extern glBeginQuery(iTarget As Integer, id As Integer)
Public Extern glEndQuery(iTarget As Integer)
Public Extern glGetQueryiv(iTarget As Integer, iPname As Integer, params As Integer[])
Public Extern glGetQueryObjectiv(id As Integer, iPname As Integer, params As Integer[])
Public Extern glGetQueryObjectuiv(id As Integer, iPname As Integer, params As Integer[])
Public Extern glBindBuffer(iTarget As Integer, buffer As Integer)
Public Extern glDeleteBuffers(n As Integer, buffers As Pointer)

' Calling with (n as integer, VarPtr(inx.data))  with inx.count >= n
Public Extern glGenBuffers(n As Integer, buffers As Pointer)
Public Extern glIsBuffer(buffer As Integer) As Boolean
Public Extern glBufferData(iTarget As Integer, size As Long, data As Pointer, usage As Integer)
Public Extern glBufferSubData(iTarget As Integer, offset As Integer, size As Long, data As Pointer)
Public Extern glGetBufferSubData(iTarget As Integer, offset As Integer, size As Long, data As Pointer)
Public Extern glMapBuffer(iTarget As Integer, access As Integer) As Integer[]
Public Extern glUnmapBuffer(iTarget As Integer) As Boolean
Public Extern glGetBufferParameteriv(iTarget As Integer, iPname As Integer, params As Integer[])
Public Extern glGetBufferPointerv(iTarget As Integer, iPname As Integer, params As Pointer)

Public Extern glBlendEquationSeparate(ModeRGB As Integer, Modealpha As Integer)
Public Extern glDrawBuffers(n As Integer, buffers As Integer[])
Public Extern glStencilOpSeparate(face As Integer, sFail As Integer, dpFail As Integer, dpPass As Integer)
Public Extern glStencilFuncSeparate(face As Integer, func As Integer, ref As Integer, mask As Integer)
Public Extern glStencilMaskSeparate(face As Integer, mask As Integer)
Public Extern glAttachShader(program As Integer, shader As Integer)
Public Extern glBindAttribLocation(program As Integer, iIndex As Integer, name As String)
Public Extern glCompileShader(shader As Integer)
Public Extern glCreateProgram() As Integer
Public Extern glCreateShader(iType As Integer) As Integer
Public Extern glDeleteProgram(program As Integer)
Public Extern glDeleteShader(shader As Integer)
Public Extern glDetachShader(program As Integer, shader As Integer)
Public Extern glDisableVertexAttribArray(iIndex As Integer)
Public Extern glEnableVertexAttribArray(iIndex As Integer)
Public Extern glGetActiveAttrib(program As Integer, iIndex As Integer, BufSize As Integer, length As Integer[], size As Integer[], type As Integer[], name As String)
Public Extern glGetActiveUniform(program As Integer, iIndex As Integer, BufSize As Integer, length As Integer[], size As Integer[], type As Integer[], name As String)
Public Extern glGetAttachedShaders(program As Integer, MaxCount As Integer, count As Integer[], shaders As Integer[])
Public Extern glGetAttribLocation(program As Integer, name As String)
Public Extern glGetProgramiv(program As Integer, iPname As Integer, params As Integer[])
Public Extern glGetProgramInfoLog(program As Integer, BufSize As Integer, length As Integer[], infoLog As String)
Public Extern glGetShaderiv(shader As Integer, iPname As Integer, params As Integer[])
Public Extern glGetShaderInfoLog(shader As Integer, BufSize As Integer, legth As Integer[], infolog As String)
Public Extern glGetShaderSource(shader As Integer, BufSize As Integer, legth As Integer[], source As String)
Public Extern glGetUniformLocation(program As Integer, name As String)
Public Extern glGetUniformfv(program As Integer, location As Integer, params As Single[])
Public Extern glGetUniformiv(program As Integer, location As Integer, params As Integer[])
Public Extern glGetVertexAttribdv(iIndex As Integer, iPname As Integer, params As Float[])
Public Extern glGetVertexAttribfv(iIndex As Integer, iPname As Integer, params As Single[])
Public Extern glGetVertexAttribiv(iIndex As Integer, iPname As Integer, params As Integer[])
Public Extern glGetVertexAttribPointerv(iIndex As Integer, iPname As Integer, p As Pointer)
Public Extern glIsProgram(program As Integer) As Boolean
Public Extern glIsShader(shader As Integer) As Boolean
Public Extern glLinkProgram(program As Integer)
Public Extern glShaderSource(shader As Integer, iSize As Integer, ByRef Source As String, ByRef length As Integer)
Public Extern glUseProgram(program As Integer)
Public Extern glUniform1f(location As Integer, v0 As Single)
Public Extern glUniform2f(location As Integer, v0 As Single, v1 As Single)
Public Extern glUniform3f(location As Integer, v0 As Single, v1 As Single, v2 As Single)
Public Extern glUniform4f(location As Integer, v0 As Single, v1 As Single, v2 As Single, v3 As Single)
Public Extern glUniform1i(location As Integer, v0 As Integer)
Public Extern glUniform2i(location As Integer, v0 As Integer, v1 As Integer)
Public Extern glUniform3i(location As Integer, v0 As Integer, v1 As Integer, v2 As Integer)
Public Extern glUniform4i(location As Integer, v0 As Integer, v1 As Integer, v2 As Integer, v3 As Integer)
Public Extern glUniform1fv(location As Integer, iSize As Integer, value As Single[])
Public Extern glUniform2fv(location As Integer, iSize As Integer, value As Single[])
Public Extern glUniform3fv(location As Integer, iSize As Integer, value As Single[])
Public Extern glUniform4fv(location As Integer, iSize As Integer, value As Single[])
Public Extern glUniform1iv(location As Integer, iSize As Integer, value As Integer[])
Public Extern glUniform2iv(location As Integer, iSize As Integer, value As Integer[])
Public Extern glUniform3iv(location As Integer, iSize As Integer, value As Integer[])
Public Extern glUniform4iv(location As Integer, iSize As Integer, value As Integer[])
' Public Extern glUniformMatrix2fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix3fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix4fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
Public Extern glValidateProgram(program As Integer)
' Public Extern glVertexAttrib1d(iIndex As Integer, x As Float)
' Public Extern glVertexAttrib1dv(iIndex As Integer, const As Float * v)
' Public Extern glVertexAttrib1f(iIndex As Integer, GLsingle x)
' Public Extern glVertexAttrib1fv(iIndex As Integer, const GLsingle * v)
' Public Extern glVertexAttrib1s(iIndex As Integer, GLshort x)
' Public Extern glVertexAttrib1sv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttrib2d(iIndex As Integer, x As Float, As Float y)
' Public Extern glVertexAttrib2dv(iIndex As Integer, const As Float * v)
' Public Extern glVertexAttrib2f(iIndex As Integer, GLsingle x, GLsingle y)
' Public Extern glVertexAttrib2fv(iIndex As Integer, const GLsingle * v)
' Public Extern glVertexAttrib2s(iIndex As Integer, GLshort x, GLshort y)
' Public Extern glVertexAttrib2sv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttrib3d(iIndex As Integer, x As Float, As Float y, As Float z)
' Public Extern glVertexAttrib3dv(iIndex As Integer, const As Float * v)
' Public Extern glVertexAttrib3f(iIndex As Integer, GLsingle x, GLsingle y, GLsingle z)
' Public Extern glVertexAttrib3fv(iIndex As Integer, const GLsingle * v)
' Public Extern glVertexAttrib3s(iIndex As Integer, GLshort x, GLshort y, GLshort z)
' Public Extern glVertexAttrib3sv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttrib4Nbv(iIndex As Integer, const GLbyte * v)
' Public Extern glVertexAttrib4Niv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttrib4Nsv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttrib4Nub(iIndex As Integer, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
' Public Extern glVertexAttrib4Nubv(iIndex As Integer, const GLubyte * v)
' Public Extern glVertexAttrib4Nuiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttrib4Nusv(iIndex As Integer, const GLushort * v)
' Public Extern glVertexAttrib4bv(iIndex As Integer, const GLbyte * v)
' Public Extern glVertexAttrib4d(iIndex As Integer, x As Float, As Float y, As Float z, As Float w)
' Public Extern glVertexAttrib4dv(iIndex As Integer, const As Float * v)
' Public Extern glVertexAttrib4f(iIndex As Integer, GLsingle x, GLsingle y, GLsingle z, GLsingle w)
' Public Extern glVertexAttrib4fv(iIndex As Integer, const GLsingle * v)
' Public Extern glVertexAttrib4iv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttrib4s(iIndex As Integer, GLshort x, GLshort y, GLshort z, GLshort w)
' Public Extern glVertexAttrib4sv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttrib4ubv(iIndex As Integer, const GLubyte * v)
' Public Extern glVertexAttrib4uiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttrib4usv(iIndex As Integer, const GLushort * v)
' Public Extern glVertexAttribPointer(iIndex As Integer, size As Integer, iType As Integer, normalized As Boolean, stride As Integer, ipointer As Byte[]) ' FIXME: verificar

' Public Extern glUniformMatrix2x3fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix3x2fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix2x4fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix4x2fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix3x4fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix4x3fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)

' Public Extern glColorMaski(iIndex As Integer, as byte r, as byte g, as byte b, as byte a)
' Public Extern glGetBooleani_v(iTarget As Integer, iIndex As Integer, as byte data as byte[])
' Public Extern glGetIntegeri_v(iTarget As Integer, iIndex As Integer, GLint data as byte[])
' Public Extern glEnablei(iTarget As Integer, iIndex As Integer)
' Public Extern glDisablei(iTarget As Integer, iIndex As Integer)
' GLAPI as byte APIENTRY glIsEnabledi(iTarget As Integer, iIndex As Integer)
' Public Extern glBeginTransformFeedback(as integer primitiveMode)
' Public Extern glEndTransformFeedback()
' Public Extern glBindBufferRange(iTarget As Integer, iIndex As Integer, buffer as integer, offset as integer, size as integer)
' Public Extern glBindBufferBase(iTarget As Integer, iIndex As Integer, buffer as integer)
' Public Extern glTransformFeedbackVaryings(program As Integer, iSize as Integer, const GLchar * const * varyings, iBuff as integerferMode)
' Public Extern glGetTransformFeedbackVarying(program As Integer, iIndex As Integer, BufSize As Integer, legth as integer[], GLsizei * size, as integer * type, name as string)
' Public Extern glClampColor(iTarget As Integer, as integer clamp)
' Public Extern glBeginConditionalRender(id as integer, Mode As Integer)
' Public Extern glEndConditionalRender()
' Public Extern glVertexAttribIPointer(iIndex As Integer, size as integer, iType As Integer, stride as integer, const * pointer)
' Public Extern glGetVertexAttribIiv(iIndex As Integer, iPname As Integer, params as integer[])
' Public Extern glGetVertexAttribIuiv(iIndex As Integer, iPname As Integer, params as integer[])
' Public Extern glVertexAttribI1i(iIndex As Integer, x As Integer)
' Public Extern glVertexAttribI2i(iIndex As Integer, x As Integer, y As Integer)
' Public Extern glVertexAttribI3i(iIndex As Integer, x As Integer, y As Integer, GLint z)
' Public Extern glVertexAttribI4i(iIndex As Integer, x As Integer, y As Integer, GLint z, GLint w)
' Public Extern glVertexAttribI1ui(iIndex As Integer, GLuint x)
' Public Extern glVertexAttribI2ui(iIndex As Integer, GLuint x, GLuint y)
' Public Extern glVertexAttribI3ui(iIndex As Integer, GLuint x, GLuint y, GLuint z)
' Public Extern glVertexAttribI4ui(iIndex As Integer, GLuint x, GLuint y, GLuint z, GLuint w)
' Public Extern glVertexAttribI1iv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttribI2iv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttribI3iv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttribI4iv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttribI1uiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttribI2uiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttribI3uiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttribI4uiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttribI4bv(iIndex As Integer, const GLbyte * v)
' Public Extern glVertexAttribI4sv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttribI4ubv(iIndex As Integer, const GLubyte * v)
' Public Extern glVertexAttribI4usv(iIndex As Integer, const GLushort * v)
' Public Extern glGetUniformuiv(program As Integer, location as Integer, params as integer[])
' Public Extern glBindFragDataLocation(program As Integer, GLuint color, const name as string)
' Public Extern Function glGetFragDataLocation(program As Integer, const name as string)
' Public Extern glUniform1ui(location as Integer, GLuint v0)
' Public Extern glUniform2ui(location as Integer, GLuint v0, GLuint v1)
' Public Extern glUniform3ui(location as Integer, GLuint v0, GLuint v1, GLuint v2)
' Public Extern glUniform4ui(location as Integer, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
' Public Extern glUniform1uiv(location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glUniform2uiv(location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glUniform3uiv(location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glUniform4uiv(location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glTexParameterIiv(iTarget As Integer, iPname As Integer, inxParams as integer[])
' Public Extern glTexParameterIuiv(iTarget As Integer, iPname As Integer, const params as integer[])
' Public Extern glGetTexParameterIiv(iTarget As Integer, iPname As Integer, params as integer[])
' Public Extern glGetTexParameterIuiv(iTarget As Integer, iPname As Integer, params as integer[])
' Public Extern glClearBufferiv(iBuff as integerfer, GLint drawbuffer, value as integer[])
' Public Extern glClearBufferuiv(iBuff as integerfer, GLint drawbuffer, const GLuint * value)
' Public Extern glClearBufferfv(iBuff as integerfer, GLint drawbuffer, const GLsingle * value)
' Public Extern glClearBufferfi(iBuff as integerfer, GLint drawbuffer, GLsingle depth, GLint stencil)
' GLAPI const GLubyte * APIENTRY glGetStringi(as integer name, iIndex As Integer)
' GLAPI as byte APIENTRY glIsRenderbuffer(GLuint renderbuffer)
' Public Extern glBindRenderbuffer(iTarget As Integer, GLuint renderbuffer)
' Public Extern glDeleteRenderbuffers(n as Integer, const GLuint * renderbuffers)
' Public Extern glGenRenderbuffers(n as Integer, GLuint * renderbuffers)
' Public Extern glRenderbufferStorage(iTarget As Integer,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glGetRenderbufferParameteriv(iTarget As Integer, iPname As Integer, params as integer[])
' GLAPI as byte APIENTRY glIsFramebuffer(GLuint framebuffer)
' Public Extern glBindFramebuffer(iTarget As Integer, GLuint framebuffer)
' Public Extern glDeleteFramebuffers(n as Integer, const GLuint * framebuffers)
' Public Extern glGenFramebuffers(n as Integer, GLuint * framebuffers)
' GLAPI as integer APIENTRY glCheckFramebufferStatus(iTarget As Integer)
' Public Extern glFramebufferTexture1D(iTarget As Integer, as integer attachment, as integer textarget, texture as Integer, iLevel as integer)
' Public Extern glFramebufferTexture2D(iTarget As Integer, as integer attachment, as integer textarget, texture as Integer, iLevel as integer)
' Public Extern glFramebufferTexture3D(iTarget As Integer, as integer attachment, as integer textarget, texture as Integer, iLevel as integer, zOffset as integer)
' Public Extern glFramebufferRenderbuffer(iTarget As Integer, as integer attachment, as integer renderbuffertarget, GLuint renderbuffer)
' Public Extern glGetFramebufferAttachmentParameteriv(iTarget As Integer, as integer attachment, iPname As Integer, params as integer[])
' Public Extern glGenerateMipmap(iTarget As Integer)
' Public Extern glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GiMaskBitField as integer, as integer filter)
' Public Extern glRenderbufferStorageMultisample(iTarget As Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glFramebufferTextureLayer(iTarget As Integer, as integer attachment, texture as Integer, iLevel as integer, GLint layer)
' GLAPI * APIENTRY glMapBufferRange(iTarget As Integer, offset as integer, GLsizeiptr length, GLbitfield access)
' Public Extern glFlushMappedBufferRange(iTarget As Integer, offset as integer, GLsizeiptr length)
' Public Extern glBindVertexArray(GLuint array)
' Public Extern glDeleteVertexArrays(n as Integer, const GLuint * arrays)
' Public Extern glGenVertexArrays(n as Integer, GLuint * arrays)
' GLAPI as byte APIENTRY glIsVertexArray(GLuint array)

' Public Extern glDrawArraysInstanced(Mode As Integer, first as integer, iSize as Integer, GLsizei instancecount)
' Public Extern glDrawElementsInstanced(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLsizei instancecount)
' Public Extern glTexBuffer(iTarget As Integer,internalformat as integer, buffer as integer)
' Public Extern glPrimitiveRestartIndex(iIndex As Integer)
' Public Extern glCopyBufferSubData(as integer readTarget, as integer writeTarget, GLintptr readOffset, GLintptr writeOffset, size as integer)
' Public Extern glGetUniformIndices(program As Integer, GLsizei uniformCount, const GLchar * const * uniformNames, GLuint * uniformIndices)
' Public Extern glGetActiveUniformsiv(program As Integer, GLsizei uniformCount, const GLuint * uniformIndices, iPname As Integer, params as integer[])
' Public Extern glGetActiveUniformName(program As Integer, GLuint uniformIndex, BufSize As Integer, legth as integer[], GLchar * uniformName)
' GLAPI GLuint APIENTRY glGetUniformBlockIndex(program As Integer, const GLchar * uniformBlockName)
' Public Extern glGetActiveUniformBlockiv(program As Integer, GLuint uniformBlockIndex, iPname As Integer, params as integer[])
' Public Extern glGetActiveUniformBlockName(program As Integer, GLuint uniformBlockIndex, BufSize As Integer, legth as integer[], GLchar * uniformBlockName)
' Public Extern glUniformBlockBinding(program As Integer, GLuint uniformBlockIndex, GLuint uniformBlockBinding)
'

' Public Extern glDrawElementsBaseVertex(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLint basevertex)
' Public Extern glDrawRangeElementsBaseVertex(Mode As Integer, start as integer, iEnd as integer , iSize as Integer, iType As Integer, const * indices, GLint basevertex)
' Public Extern glDrawElementsInstancedBaseVertex(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLsizei instancecount, GLint basevertex)
' Public Extern glMultiDrawElementsBaseVertex(Mode As Integer, const GLsizei * count, iType As Integer, const * const * indices, drawcount as integer, const GLint * basevertex)
' Public Extern glProvokingVertex(Mode As Integer)
' GLAPI GLsync APIENTRY glFenceSync(as integer condition, GLbitfield flags)
' GLAPI as byte APIENTRY glIsSync(GLsync sync)
' Public Extern glDeleteSync(GLsync sync)
' GLAPI as integer APIENTRY glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)
' Public Extern glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)
' Public Extern glGetInteger64v(iPname As Integer, GLint64 data as byte[])
' Public Extern glGetSynciv(GLsync sync, iPname As Integer, BufSize As Integer, legth as integer[], GLint * values)
' Public Extern glGetInteger64i_v(iTarget As Integer, iIndex As Integer, GLint64 data as byte[])
' Public Extern glGetBufferParameteri64v(iTarget As Integer, iPname As Integer, GLint64 * params)
' Public Extern glFramebufferTexture(iTarget As Integer, as integer attachment, texture as Integer, iLevel as integer)
' Public Extern glTexImage2DMultisample(iTarget As Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, as byte fixedsamplelocations)
' Public Extern glTexImage3DMultisample(iTarget As Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, as byte fixedsamplelocations)
' Public Extern glGetMultisamplefv(iPname As Integer, iIndex As Integer, GLsingle * val)
' Public Extern glSampleMaski(mask as integerNumber, GiMaskBitField as integer)

' Public Extern glBindFragDataLocationIndexed(program As Integer, GLuint colorNumber, iIndex As Integer, const name as string)
' Public Extern Function glGetFragDataIndex(program As Integer, const name as string)
' Public Extern glGenSamplers(iSize as Integer, GLuint * samplers)
' Public Extern glDeleteSamplers(iSize as Integer, const GLuint * samplers)
' GLAPI as byte APIENTRY glIsSampler(GLuint sampler)
' Public Extern glBindSampler(GLuint unit, GLuint sampler)
' Public Extern glSamplerParameteri(GLuint sampler, iPname As Integer, iParam As Integer)
' Public Extern glSamplerParameteriv(GLuint sampler, iPname As Integer, const GLint * param)
' Public Extern glSamplerParameterf(GLuint sampler, iPname As Integer, fParam As single)
' Public Extern glSamplerParameterfv(GLuint sampler, iPname As Integer, const GLsingle * param)
' Public Extern glSamplerParameterIiv(GLuint sampler, iPname As Integer, const GLint * param)
' Public Extern glSamplerParameterIuiv(GLuint sampler, iPname As Integer, const GLuint * param)
' Public Extern glGetSamplerParameteriv(GLuint sampler, iPname As Integer, params as integer[])
' Public Extern glGetSamplerParameterIiv(GLuint sampler, iPname As Integer, params as integer[])
' Public Extern glGetSamplerParameterfv(GLuint sampler, iPname As Integer, params as single[])
' Public Extern glGetSamplerParameterIuiv(GLuint sampler, iPname As Integer, params as integer[])
' Public Extern glQueryCounter(id as integer, iTarget As Integer)
' Public Extern glGetQueryObjecti64v(id as integer, iPname As Integer, GLint64 * params)
' Public Extern glGetQueryObjectui64v(id as integer, iPname As Integer, GLuint64 * params)
' Public Extern glVertexAttribDivisor(iIndex As Integer, GLuint divisor)
' Public Extern glVertexAttribP1ui(iIndex As Integer, iType As Integer, as byte normalized, GLuint value)
' Public Extern glVertexAttribP1uiv(iIndex As Integer, iType As Integer, as byte normalized, const GLuint * value)
' Public Extern glVertexAttribP2ui(iIndex As Integer, iType As Integer, as byte normalized, GLuint value)
' Public Extern glVertexAttribP2uiv(iIndex As Integer, iType As Integer, as byte normalized, const GLuint * value)
' Public Extern glVertexAttribP3ui(iIndex As Integer, iType As Integer, as byte normalized, GLuint value)
' Public Extern glVertexAttribP3uiv(iIndex As Integer, iType As Integer, as byte normalized, const GLuint * value)
' Public Extern glVertexAttribP4ui(iIndex As Integer, iType As Integer, as byte normalized, GLuint value)
' Public Extern glVertexAttribP4uiv(iIndex As Integer, iType As Integer, as byte normalized, const GLuint * value)
'

' Public Extern glMinSampleShading(value as single)
' Public Extern glBlendEquationi(GLuint buf, Mode As Integer)
' Public Extern glBlendEquationSeparatei(GLuint buf, Mode As IntegerRGB, Mode As IntegerAlpha)
' Public Extern glBlendFunci(GLuint buf, as integer src, as integer dst)
' Public Extern glBlendFuncSeparatei(GLuint buf, as integer srcRGB, as integer dstRGB, as integer srcAlpha, as integer dstAlpha)
' Public Extern glDrawArraysIndirect(Mode As Integer, const * indirect)
' Public Extern glDrawElementsIndirect(Mode As Integer, iType As Integer, const * indirect)
' Public Extern glUniform1d(location as Integer, x as float)
' Public Extern glUniform2d(location as Integer, x as float, as float y)
' Public Extern glUniform3d(location as Integer, x as float, as float y, as float z)
' Public Extern glUniform4d(location as Integer, x as float, as float y, as float z, as float w)
' Public Extern glUniform1dv(location as Integer, iSize as Integer, const as float * value)
' Public Extern glUniform2dv(location as Integer, iSize as Integer, const as float * value)
' Public Extern glUniform3dv(location as Integer, iSize as Integer, const as float * value)
' Public Extern glUniform4dv(location as Integer, iSize as Integer, const as float * value)
' Public Extern glUniformMatrix2dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix3dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix4dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix2x3dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix2x4dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix3x2dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix3x4dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix4x2dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix4x3dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glGetUniformdv(program As Integer, location as Integer, as float * params)
' Public Extern Function glGetSubroutineUniformLocation(program As Integer, as integer shadertype, const name as string)
' GLAPI GLuint APIENTRY glGetSubroutineIndex(program As Integer, as integer shadertype, const name as string)
' Public Extern glGetActiveSubroutineUniformiv(program As Integer, as integer shadertype, iIndex As Integer, iPname As Integer, GLint * values)
' Public Extern glGetActiveSubroutineUniformName(program As Integer, as integer shadertype, iIndex As Integer, BufSize As Integer, legth as integer[], name as string)
' Public Extern glGetActiveSubroutineName(program As Integer, as integer shadertype, iIndex As Integer, BufSize As Integer, legth as integer[], name as string)
' Public Extern glUniformSubroutinesuiv(as integer shadertype, iSize as Integer, const GLuint * indices)
' Public Extern glGetUniformSubroutineuiv(as integer shadertype, location as Integer, params as integer[])
' Public Extern glGetProgramStageiv(program As Integer, as integer shadertype, iPname As Integer, GLint * values)
' Public Extern glPatchParameteri(iPname As Integer, GLint value)
' Public Extern glPatchParameterfv(iPname As Integer, const GLsingle * values)
' Public Extern glBindTransformFeedback(iTarget As Integer, id as integer)
' Public Extern glDeleteTransformFeedbacks(n as Integer, ids as integer[])
' Public Extern glGenTransformFeedbacks(n as Integer, GLuint * ids)
' GLAPI as byte APIENTRY glIsTransformFeedback(id as integer)
' Public Extern glPauseTransformFeedback()
' Public Extern glResumeTransformFeedback()
' Public Extern glDrawTransformFeedback(Mode As Integer, id as integer)
' Public Extern glDrawTransformFeedbackStream(Mode As Integer, id as integer, GLuint stream)
' Public Extern glBeginQueryIndexed(iTarget As Integer, iIndex As Integer, id as integer)
' Public Extern glEndQueryIndexed(iTarget As Integer, iIndex As Integer)
' Public Extern glGetQueryIndexediv(iTarget As Integer, iIndex As Integer, iPname As Integer, params as integer[])
'

' Public Extern glReleaseShaderCompiler()
' Public Extern glShaderBinary(iSize as Integer, const GLuint * shaders, as integer binaryformat, const * Binary , GLsizei length)
' Public Extern glGetShaderPrecisionFormat(as integer shadertype, as integer precisiontype, GLint * range, GLint * precision)
' Public Extern glDepthRangef(GLsingle n, GLsingle f)
' Public Extern glClearDepthf(GLsingle d)
' Public Extern glGetProgramBinary(program As Integer, BufSize As Integer, legth as integer[], as integer * binaryFormat, * Binary )
' Public Extern glProgramBinary(program As Integer, as integer binaryFormat, const * Binary , GLsizei length)
' Public Extern glProgramParameteri(program As Integer, iPname As Integer, GLint value)
' Public Extern glUseProgramStages(GLuint pipeline, GLbitfield stages, program As Integer)
' Public Extern glActiveShaderProgram(GLuint pipeline, program As Integer)
' GLAPI GLuint APIENTRY glCreateShaderProgramv(iType As Integer, iSize as Integer, const GLchar * const * strings)
' Public Extern glBindProgramPipeline(GLuint pipeline)
' Public Extern glDeleteProgramPipelines(n as Integer, const GLuint * pipelines)
' Public Extern glGenProgramPipelines(n as Integer, GLuint * pipelines)
' GLAPI as byte APIENTRY glIsProgramPipeline(GLuint pipeline)
' Public Extern glGetProgramPipelineiv(GLuint pipeline, iPname As Integer, params as integer[])
' Public Extern glProgramUniform1i(program As Integer, location as Integer, v0 as integer)
' Public Extern glProgramUniform1iv(program As Integer, location as Integer, iSize as Integer, value as integer[])
' Public Extern glProgramUniform1f(program As Integer, location as Integer, v0 as single)
' Public Extern glProgramUniform1fv(program As Integer, location as Integer, iSize as Integer, const GLsingle * value)
' Public Extern glProgramUniform1d(program As Integer, location as Integer, as float v0)
' Public Extern glProgramUniform1dv(program As Integer, location as Integer, iSize as Integer, const as float * value)
' Public Extern glProgramUniform1ui(program As Integer, location as Integer, GLuint v0)
' Public Extern glProgramUniform1uiv(program As Integer, location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glProgramUniform2i(program As Integer, location as Integer, v0 as integer, v1 as integer)
' Public Extern glProgramUniform2iv(program As Integer, location as Integer, iSize as Integer, value as integer[])
' Public Extern glProgramUniform2f(program As Integer, location as Integer, v0 as single, v1 as single)
' Public Extern glProgramUniform2fv(program As Integer, location as Integer, iSize as Integer, const GLsingle * value)
' Public Extern glProgramUniform2d(program As Integer, location as Integer, as float v0, as float v1)
' Public Extern glProgramUniform2dv(program As Integer, location as Integer, iSize as Integer, const as float * value)
' Public Extern glProgramUniform2ui(program As Integer, location as Integer, GLuint v0, GLuint v1)
' Public Extern glProgramUniform2uiv(program As Integer, location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glProgramUniform3i(program As Integer, location as Integer, v0 as integer, v1 as integer, v2 as integer)
' Public Extern glProgramUniform3iv(program As Integer, location as Integer, iSize as Integer, value as integer[])
' Public Extern glProgramUniform3f(program As Integer, location as Integer, v0 as single, v1 as single, v2 as single)
' Public Extern glProgramUniform3fv(program As Integer, location as Integer, iSize as Integer, const GLsingle * value)
' Public Extern glProgramUniform3d(program As Integer, location as Integer, as float v0, as float v1, as float v2)
' Public Extern glProgramUniform3dv(program As Integer, location as Integer, iSize as Integer, const as float * value)
' Public Extern glProgramUniform3ui(program As Integer, location as Integer, GLuint v0, GLuint v1, GLuint v2)
' Public Extern glProgramUniform3uiv(program As Integer, location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glProgramUniform4i(program As Integer, location as Integer, v0 as integer, v1 as integer, v2 as integer, v3 as integer)
' Public Extern glProgramUniform4iv(program As Integer, location as Integer, iSize as Integer, value as integer[])
' Public Extern glProgramUniform4f(program As Integer, location as Integer, v0 as single, v1 as single, v2 as single, v3 as single)
' Public Extern glProgramUniform4fv(program As Integer, location as Integer, iSize as Integer, const GLsingle * value)
' Public Extern glProgramUniform4d(program As Integer, location as Integer, as float v0, as float v1, as float v2, as float v3)
' Public Extern glProgramUniform4dv(program As Integer, location as Integer, iSize as Integer, const as float * value)
' Public Extern glProgramUniform4ui(program As Integer, location as Integer, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
' Public Extern glProgramUniform4uiv(program As Integer, location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glProgramUniformMatrix2fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix3fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix4fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix2dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix3dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix4dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix2x3fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix3x2fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix2x4fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix4x2fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix3x4fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix4x3fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix2x3dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix3x2dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix2x4dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix4x2dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix3x4dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix4x3dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glValidateProgramPipeline(GLuint pipeline)
' Public Extern glGetProgramPipelineInfoLog(GLuint pipeline, BufSize As Integer, legth as integer[], GLchar * infoLog)
' Public Extern glVertexAttribL1d(iIndex As Integer, x as float)
' Public Extern glVertexAttribL2d(iIndex As Integer, x as float, as float y)
' Public Extern glVertexAttribL3d(iIndex As Integer, x as float, as float y, as float z)
' Public Extern glVertexAttribL4d(iIndex As Integer, x as float, as float y, as float z, as float w)
' Public Extern glVertexAttribL1dv(iIndex As Integer, const as float * v)
' Public Extern glVertexAttribL2dv(iIndex As Integer, const as float * v)
' Public Extern glVertexAttribL3dv(iIndex As Integer, const as float * v)
' Public Extern glVertexAttribL4dv(iIndex As Integer, const as float * v)
' Public Extern glVertexAttribLPointer(iIndex As Integer, size as integer, iType As Integer, stride as integer, const * pointer)
' Public Extern glGetVertexAttribLdv(iIndex As Integer, iPname As Integer, as float * params)
' Public Extern glViewportArrayv(GLuint first, iSize as Integer, const GLsingle * v)
' Public Extern glViewportIndexedf(iIndex As Integer, GLsingle x, GLsingle y, GLsingle w, GLsingle h)
' Public Extern glViewportIndexedfv(iIndex As Integer, const GLsingle * v)
' Public Extern glScissorArrayv(GLuint first, iSize as Integer, const GLint * v)
' Public Extern glScissorIndexed(iIndex As Integer, GLint left, GLint bottom, iWidth As Integer, iHeight As Integer)
' Public Extern glScissorIndexedv(iIndex As Integer, const GLint * v)
' Public Extern glDepthRangeArrayv(GLuint first, iSize as Integer, const as float * v)
' Public Extern glDepthRangeIndexed(iIndex As Integer, as float n, as float f)
' Public Extern glGetsinglei_v(iTarget As Integer, iIndex As Integer, GLsingle data as byte[])
' Public Extern glGetDoublei_v(iTarget As Integer, iIndex As Integer, as float data as byte[])
'

' Public Extern glDrawArraysInstancedBaseInstance(Mode As Integer, first as integer, iSize as Integer, GLsizei instancecount, GLuint baseinstance)
' Public Extern glDrawElementsInstancedBaseInstance(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLsizei instancecount, GLuint baseinstance)
' Public Extern glDrawElementsInstancedBaseVertexBaseInstance(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance)
' Public Extern glGetInternalformativ(iTarget As Integer,internalformat as integer, iPname As Integer, BufSize As Integer, params as integer[])
' Public Extern glGetActiveAtomicCounterBufferiv(program As Integer, buffer as integerIndex, iPname As Integer, params as integer[])
' Public Extern glBindImageTexture(GLuint unit, texture as Integer, iLevel as integer, as byte layered, GLint layer, as integer access, iFormat as integer)
' Public Extern glMemoryBarrier(GLbitfield barriers)
' Public Extern glTexStorage1D(iTarget As Integer, GLsizei levels,internalformat as integer, iWidth As Integer)
' Public Extern glTexStorage2D(iTarget As Integer, GLsizei levels,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glTexStorage3D(iTarget As Integer, GLsizei levels,internalformat as integer, iWidth As Integer, iHeight As Integer, iDepth as integer)
' Public Extern glDrawTransformFeedbackInstanced(Mode As Integer, id as integer, GLsizei instancecount)
' Public Extern glDrawTransformFeedbackStreamInstanced(Mode As Integer, id as integer, GLuint stream, GLsizei instancecount)

' Public Extern glClearBufferData(iTarget As Integer,internalformat as integer, iFormat as integer, iType As Integer, data as byte[])
' Public Extern glClearBufferSubData(iTarget As Integer,internalformat as integer, offset as integer, size as integer, iFormat as integer, iType As Integer, data as byte[])
' Public Extern glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)
' Public Extern glDispatchComputeIndirect(GLintptr indirect)
' Public Extern glCopyImageSubData(GLuint srcName, as integer srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, as integer dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth)
' Public Extern glFramebufferParameteri(iTarget As Integer, iPname As Integer, iParam As Integer)
' Public Extern glGetFramebufferParameteriv(iTarget As Integer, iPname As Integer, params as integer[])
' Public Extern glGetInternalformati64v(iTarget As Integer,internalformat as integer, iPname As Integer, BufSize As Integer, GLint64 * params)
' Public Extern glInvalidateTexSubImage(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer)
' Public Extern glInvalidateTexImage(texture as Integer, iLevel as integer)
' Public Extern glInvalidateBufferSubData(buffer as integer, offset as integer, GLsizeiptr length)
' Public Extern glInvalidateBufferData(buffer as integer)
' Public Extern glInvalidateFramebuffer(iTarget As Integer, n as IntegerumAttachments, const as integer * attachments)
' Public Extern glInvalidateSubFramebuffer(iTarget As Integer, n as IntegerumAttachments, const as integer * attachments, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
' Public Extern glMultiDrawArraysIndirect(Mode As Integer, const * indirect, drawcount as integer, stride as integer)
' Public Extern glMultiDrawElementsIndirect(Mode As Integer, iType As Integer, const * indirect, drawcount as integer, stride as integer)
' Public Extern glGetProgramInterfaceiv(program As Integer, as integer programInterface, iPname As Integer, params as integer[])
' GLAPI GLuint APIENTRY glGetProgramResourceIndex(program As Integer, as integer programInterface, const name as string)
' Public Extern glGetProgramResourceName(program As Integer, as integer programInterface, iIndex As Integer, BufSize As Integer, legth as integer[], name as string)
' Public Extern glGetProgramResourceiv(program As Integer, as integer programInterface, iIndex As Integer, GLsizei propCount, const as integer * props, BufSize As Integer, legth as integer[], params as integer[])
' Public Extern Function glGetProgramResourceLocation(program As Integer, as integer programInterface, const name as string)
' Public Extern Function glGetProgramResourceLocationIndex(program As Integer, as integer programInterface, const name as string)
' Public Extern glShaderStorageBlockBinding(program As Integer, GLuint storageBlockIndex, GLuint storageBlockBinding)
' Public Extern glTexBufferRange(iTarget As Integer,internalformat as integer, buffer as integer, offset as integer, size as integer)
' Public Extern glTexStorage2DMultisample(iTarget As Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, as byte fixedsamplelocations)
' Public Extern glTexStorage3DMultisample(iTarget As Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, as byte fixedsamplelocations)
' Public Extern glTextureView(texture as Integer, iTarget As Integer, GLuint origtexture,internalformat as integer, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers)
' Public Extern glBindVertexBuffer(GLuint bindingindex, buffer as integer, offset as integer, stride as integer)
' Public Extern glVertexAttribFormat(GLuint attribindex, size as integer, iType As Integer, as byte normalized, GLuint relativeoffset)
' Public Extern glVertexAttribIFormat(GLuint attribindex, size as integer, iType As Integer, GLuint relativeoffset)
' Public Extern glVertexAttribLFormat(GLuint attribindex, size as integer, iType As Integer, GLuint relativeoffset)
' Public Extern glVertexAttribBinding(GLuint attribindex, GLuint bindingindex)
' Public Extern glVertexBindingDivisor(GLuint bindingindex, GLuint divisor)
' Public Extern glDebugMessageControl(as integer source, iType As Integer, as integer severity, iSize as Integer, ids as integer[], as byte enabled)
' Public Extern glDebugMessageInsert(as integer source, iType As Integer, id as integer, as integer severity, GLsizei length, const GLchar * buf)
' Public Extern glDebugMessageCallback(GLDEBUGPROC callback, const * userParam)
' GLAPI GLuint APIENTRY glGetDebugMessageLog(iCount As Integer, BufSize As Integer, as integer * sources, as integer * types, GLuint * ids, as integer * severities, legth as integer[]s, GLchar * messageLog)
' Public Extern glPushDebugGroup(as integer source, id as integer, GLsizei length, const GLchar * message)
' Public Extern glPopDebugGroup()
' Public Extern glObjectLabel(as integer identifier, GLuint name, GLsizei length, const GLchar * label)
' Public Extern glGetObjectLabel(as integer identifier, GLuint name, BufSize As Integer, legth as integer[], GLchar * label)
' Public Extern glObjectPtrLabel(const * ptr, GLsizei length, const GLchar * label)
' Public Extern glGetObjectPtrLabel(const * ptr, BufSize As Integer, legth as integer[], GLchar * label)

' Public Extern glBufferStorage(iTarget As Integer, size as integer, data as byte[], GLbitfield flags)
' Public Extern glClearTexImage(texture as Integer, iLevel as integer, iFormat as integer, iType As Integer, data as byte[])
' Public Extern glClearTexSubImage(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, iFormat as integer, iType As Integer, data as byte[])
' Public Extern glBindBuffersBase(iTarget As Integer, GLuint first, iSize as Integer, const buffers as integer[])
' Public Extern glBindBuffersRange(iTarget As Integer, GLuint first, iSize as Integer, const buffers as integer[], const GLintptr * offsets, const GLsizeiptr * sizes)
' Public Extern glBindTextures(GLuint first, iSize as Integer, const GLuint * textures)
' Public Extern glBindSamplers(GLuint first, iSize as Integer, const GLuint * samplers)
' Public Extern glBindImageTextures(GLuint first, iSize as Integer, const GLuint * textures)
' Public Extern glBindVertexBuffers(GLuint first, iSize as Integer, const buffers as integer[], const GLintptr * offsets, const GLsizei * strides)

' Public Extern glClipControl(as integer origin, as integer depth)
' Public Extern glCreateTransformFeedbacks(n as Integer, GLuint * ids)
' Public Extern glTransformFeedbackBufferBase(GLuint xfb, iIndex As Integer, buffer as integer)
' Public Extern glTransformFeedbackBufferRange(GLuint xfb, iIndex As Integer, buffer as integer, offset as integer, size as integer)
' Public Extern glGetTransformFeedbackiv(GLuint xfb, iPname As Integer, GLint * param)
' Public Extern glGetTransformFeedbacki_v(GLuint xfb, iPname As Integer, iIndex As Integer, GLint * param)
' Public Extern glGetTransformFeedbacki64_v(GLuint xfb, iPname As Integer, iIndex As Integer, GLint64 * param)
' Public Extern glCreateBuffers(n as Integer, buffers as integer[])
' Public Extern glNamedBufferStorage(buffer as integer, size as integer, data as byte[], GLbitfield flags)
' Public Extern glNamedBufferData(buffer as integer, size as integer, data as byte[], as integer usage)
' Public Extern glNamedBufferSubData(buffer as integer, offset as integer, size as integer, data as byte[])
' Public Extern glCopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, size as integer)
' Public Extern glClearNamedBufferData(buffer as integer,internalformat as integer, iFormat as integer, iType As Integer, data as byte[])
' Public Extern glClearNamedBufferSubData(buffer as integer,internalformat as integer, offset as integer, size as integer, iFormat as integer, iType As Integer, data as byte[])
' GLAPI * APIENTRY glMapNamedBuffer(buffer as integer, as integer access)
' GLAPI * APIENTRY glMapNamedBufferRange(buffer as integer, offset as integer, GLsizeiptr length, GLbitfield access)
' GLAPI as byte APIENTRY glUnmapNamedBuffer(buffer as integer)
' Public Extern glFlushMappedNamedBufferRange(buffer as integer, offset as integer, GLsizeiptr length)
' Public Extern glGetNamedBufferParameteriv(buffer as integer, iPname As Integer, params as integer[])
' Public Extern glGetNamedBufferParameteri64v(buffer as integer, iPname As Integer, GLint64 * params)
' Public Extern glGetNamedBufferPointerv(buffer as integer, iPname As Integer, * * params)
' Public Extern glGetNamedBufferSubData(buffer as integer, offset as integer, size as integer, data as byte[])
' Public Extern glCreateFramebuffers(n as Integer, GLuint * framebuffers)
' Public Extern glNamedFramebufferRenderbuffer(GLuint framebuffer, as integer attachment, as integer renderbuffertarget, GLuint renderbuffer)
' Public Extern glNamedFramebufferParameteri(GLuint framebuffer, iPname As Integer, iParam As Integer)
' Public Extern glNamedFramebufferTexture(GLuint framebuffer, as integer attachment, texture as Integer, iLevel as integer)
' Public Extern glNamedFramebufferTextureLayer(GLuint framebuffer, as integer attachment, texture as Integer, iLevel as integer, GLint layer)
' Public Extern glNamedFramebufferDrawBuffer(GLuint framebuffer, iBuff as integer)
' Public Extern glNamedFramebufferDrawBuffers(GLuint framebuffer, n as Integer, const as integer * bufs)
' Public Extern glNamedFramebufferReadBuffer(GLuint framebuffer, as integer src)
' Public Extern glInvalidateNamedFramebufferData(GLuint framebuffer, n as IntegerumAttachments, const as integer * attachments)
' Public Extern glInvalidateNamedFramebufferSubData(GLuint framebuffer, n as IntegerumAttachments, const as integer * attachments, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
' Public Extern glClearNamedFramebufferiv(GLuint framebuffer, iBuff as integerfer, GLint drawbuffer, value as integer[])
' Public Extern glClearNamedFramebufferuiv(GLuint framebuffer, iBuff as integerfer, GLint drawbuffer, const GLuint * value)
' Public Extern glClearNamedFramebufferfv(GLuint framebuffer, iBuff as integerfer, GLint drawbuffer, const GLsingle * value)
' Public Extern glClearNamedFramebufferfi(GLuint framebuffer, iBuff as integerfer, GLint drawbuffer, GLsingle depth, GLint stencil)
' Public Extern glBlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GiMaskBitField as integer, as integer filter)
' GLAPI as integer APIENTRY glCheckNamedFramebufferStatus(GLuint framebuffer, iTarget As Integer)
' Public Extern glGetNamedFramebufferParameteriv(GLuint framebuffer, iPname As Integer, GLint * param)
' Public Extern glGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, as integer attachment, iPname As Integer, params as integer[])
' Public Extern glCreateRenderbuffers(n as Integer, GLuint * renderbuffers)
' Public Extern glNamedRenderbufferStorage(GLuint renderbuffer,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glNamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glGetNamedRenderbufferParameteriv(GLuint renderbuffer, iPname As Integer, params as integer[])
' Public Extern glCreateTextures(iTarget As Integer, n as Integer, GLuint * textures)
' Public Extern glTextureBuffer(texture as Integer,internalformat as integer, buffer as integer)
' Public Extern glTextureBufferRange(texture as Integer,internalformat as integer, buffer as integer, offset as integer, size as integer)
' Public Extern glTextureStorage1D(texture as Integer, GLsizei levels,internalformat as integer, iWidth As Integer)
' Public Extern glTextureStorage2D(texture as Integer, GLsizei levels,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glTextureStorage3D(texture as Integer, GLsizei levels,internalformat as integer, iWidth As Integer, iHeight As Integer, iDepth as integer)
' Public Extern glTextureStorage2DMultisample(texture as Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, as byte fixedsamplelocations)
' Public Extern glTextureStorage3DMultisample(texture as Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, as byte fixedsamplelocations)
' Public Extern glTextureSubImage1D(texture as Integer, iLevel as integer, xOffset as integer, iWidth As Integer, iFormat as integer, iType As Integer, pixels as byte[])
' Public Extern glTextureSubImage2D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, iWidth As Integer, iHeight As Integer, iFormat as integer, iType As Integer, pixels as byte[])
' Public Extern glTextureSubImage3D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, iFormat as integer, iType As Integer, pixels as byte[])
' Public Extern glCompressedTextureSubImage1D(texture as Integer, iLevel as integer, xOffset as integer, iWidth As Integer, iFormat as integer, imagesize as integer, data as byte[])
' Public Extern glCompressedTextureSubImage2D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, iWidth As Integer, iHeight As Integer, iFormat as integer, imagesize as integer, data as byte[])
' Public Extern glCompressedTextureSubImage3D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, iFormat as integer, imagesize as integer, data as byte[])
' Public Extern glCopyTextureSubImage1D(texture as Integer, iLevel as integer, xOffset as integer, x As Integer, y As Integer, iWidth As Integer)
' Public Extern glCopyTextureSubImage2D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
' Public Extern glCopyTextureSubImage3D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
' Public Extern glTextureParameterf(texture as Integer, iPname As Integer, fParam As single)
' Public Extern glTextureParameterfv(texture as Integer, iPname As Integer, const GLsingle * param)
' Public Extern glTextureParameteri(texture as Integer, iPname As Integer, iParam As Integer)
' Public Extern glTextureParameterIiv(texture as Integer, iPname As Integer, inxParams as integer[])
' Public Extern glTextureParameterIuiv(texture as Integer, iPname As Integer, const params as integer[])
' Public Extern glTextureParameteriv(texture as Integer, iPname As Integer, const GLint * param)
' Public Extern glGenerateTextureMipmap(texture as Integer)
' Public Extern glBindTextureUnit(GLuint unit, texture as Integer)
' Public Extern glGetTextureImage(texture as Integer, iLevel as integer, iFormat as integer, iType As Integer, BufSize As Integer, * pixels)
' Public Extern glGetCompressedTextureImage(texture as Integer, iLevel as integer, BufSize As Integer, * pixels)
' Public Extern glGetTextureLevelParameterfv(texture as Integer, iLevel as integer, iPname As Integer, params as single[])
' Public Extern glGetTextureLevelParameteriv(texture as Integer, iLevel as integer, iPname As Integer, params as integer[])
' Public Extern glGetTextureParameterfv(texture as Integer, iPname As Integer, params as single[])
' Public Extern glGetTextureParameterIiv(texture as Integer, iPname As Integer, params as integer[])
' Public Extern glGetTextureParameterIuiv(texture as Integer, iPname As Integer, params as integer[])
' Public Extern glGetTextureParameteriv(texture as Integer, iPname As Integer, params as integer[])
' Public Extern glCreateVertexArrays(n as Integer, GLuint * arrays)
' Public Extern glDisableVertexArrayAttrib(GLuint vaobj, iIndex As Integer)
' Public Extern glEnableVertexArrayAttrib(GLuint vaobj, iIndex As Integer)
' Public Extern glVertexArrayElementBuffer(GLuint vaobj, buffer as integer)
' Public Extern glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, buffer as integer, offset as integer, stride as integer)
' Public Extern glVertexArrayVertexBuffers(GLuint vaobj, GLuint first, iSize as Integer, const buffers as integer[], const GLintptr * offsets, const GLsizei * strides)
' Public Extern glVertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex)
' Public Extern glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, size as integer, iType As Integer, as byte normalized, GLuint relativeoffset)
' Public Extern glVertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, size as integer, iType As Integer, GLuint relativeoffset)
' Public Extern glVertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, size as integer, iType As Integer, GLuint relativeoffset)
' Public Extern glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor)
' Public Extern glGetVertexArrayiv(GLuint vaobj, iPname As Integer, GLint * param)
' Public Extern glGetVertexArrayIndexediv(GLuint vaobj, iIndex As Integer, iPname As Integer, GLint * param)
' Public Extern glGetVertexArrayIndexed64iv(GLuint vaobj, iIndex As Integer, iPname As Integer, GLint64 * param)
' Public Extern glCreateSamplers(n as Integer, GLuint * samplers)
' Public Extern glCreateProgramPipelines(n as Integer, GLuint * pipelines)
' Public Extern glCreateQueries(iTarget As Integer, n as Integer, GLuint * ids)
' Public Extern glGetQueryBufferObjecti64v(id as integer, buffer as integer, iPname As Integer, offset as integer)
' Public Extern glGetQueryBufferObjectiv(id as integer, buffer as integer, iPname As Integer, offset as integer)
' Public Extern glGetQueryBufferObjectui64v(id as integer, buffer as integer, iPname As Integer, offset as integer)
' Public Extern glGetQueryBufferObjectuiv(id as integer, buffer as integer, iPname As Integer, offset as integer)
' Public Extern glMemoryBarrierByRegion(GLbitfield barriers)
' Public Extern glGetTextureSubImage(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, iFormat as integer, iType As Integer, BufSize As Integer, * pixels)
' Public Extern glGetCompressedTextureSubImage(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, BufSize As Integer, * pixels)
' GLAPI as integer APIENTRY glGetGraphicsResetStatus()
' Public Extern glGetnCompressedTexImage(iTarget As Integer, GLint lod, BufSize As Integer, * pixels)
' Public Extern glGetnTexImage(iTarget As Integer, iLevel as integer, iFormat as integer, iType As Integer, BufSize As Integer, * pixels)
' Public Extern glGetnUniformdv(program As Integer, location as Integer, BufSize As Integer, as float * params)
' Public Extern glGetnUniformfv(program As Integer, location as Integer, BufSize As Integer, params as single[])
' Public Extern glGetnUniformiv(program As Integer, location as Integer, BufSize As Integer, params as integer[])
' Public Extern glGetnUniformuiv(program As Integer, location as Integer, BufSize As Integer, params as integer[])
' Public Extern glReadnPixels(x As Integer, y As Integer, iWidth As Integer, iHeight As Integer, iFormat as integer, iType As Integer, BufSize As Integer, data as byte[])
' Public Extern glTextureBarrier()

' Publicshader As IntegercializeShader(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue)
' Public Extern glMultiDrawArraysIndirectCount(Mode As Integer, const * indirect, GLintptr drawcount, GLsizei maxdrawcount, stride as integer)
' Public Extern glMultiDrawElementsIndirectCount(Mode As Integer, iType As Integer, const * indirect, GLintptr drawcount, GLsizei maxdrawcount, stride as integer)
' Public Extern glPolygonOffsetClamp(GLsingle factor, GLsingle units, GLsingle clamp)
' Public Const GL_ARB_ES3_2_compatibility 1
' Public Const GL_PRIMITIVE_BOUNDING_BOX_ARB As Integer = &H92BE
' Public Const GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB As Integer = &H9381
' Public Const GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB As Integer = &H9382
' Public Extern glPrimitiveBoundingBoxARB(GLsingle minX, GLsingle minY, GLsingle minZ, GLsingle minW, GLsingle maxX, GLsingle maxY, GLsingle maxZ, GLsingle maxW)
' GLAPI GLuint64 APIENTRY glGetTextureHandleARB(texture as Integer)
' GLAPI GLuint64 APIENTRY glGetTextureSamplerHandleARB(texture as Integer, GLuint sampler)
' Public Extern glMakeTextureHandleResidentARB(GLuint64 handle)
' Public Extern glMakeTextureHandleNonResidentARB(GLuint64 handle)
' GLAPI GLuint64 APIENTRY glGetImageHandleARB(texture as Integer, iLevel as integer, as byte layered, GLint layer, iFormat as integer)
' Public Extern glMakeImageHandleResidentARB(GLuint64 handle, as integer access)
' Public Extern glMakeImageHandleNonResidentARB(GLuint64 handle)
' Public Extern glUniformHandleui64ARB(location as Integer, GLuint64 value)
' Public Extern glUniformHandleui64vARB(location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glProgramUniformHandleui64ARB(program As Integer, location as Integer, GLuint64 value)
' Public Extern glProgramUniformHandleui64vARB(program As Integer, location as Integer, iSize as Integer, const GLuint64 * values)
' GLAPI as byte APIENTRY glIsTextureHandleResidentARB(GLuint64 handle)
' GLAPI as byte APIENTRY glIsImageHandleResidentARB(GLuint64 handle)
' Public Extern glVertexAttribL1ui64ARB(iIndex As Integer, GLuint64EXT x)
' Public Extern glVertexAttribL1ui64vARB(iIndex As Integer, const GLuint64EXT * v)
' Public Extern glGetVertexAttribLui64vARB(iIndex As Integer, iPname As Integer, GLuint64EXT * params)
' Public Const GL_ARB_cl_event 1
' Struct _cl_context
' Struct _cl_event
' Public Const GL_SYNC_CL_EVENT_ARB As Integer = &H8240
' Public Const GL_SYNC_CL_EVENT_COMPLETE_ARB As Integer = &H8241
'
' GLAPI GLsync APIENTRY glCreateSyncFromCLeventARB(struct _cl_context * context, struct _cl_event * Event , GLbitfield flags)

' Public Extern glDispatchComputeGroupSizeARB(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z)
'
' Public Const GL_ARB_debug_output 1
' typedef(APIENTRY * GLDEBUGPROCARB)(as integer source, iType As Integer, id as integer, as integer severity, GLsizei length, const GLchar * message, const * userParam)

' Public Extern glDebugMessageControlARB(as integer source, iType As Integer, as integer severity, iSize as Integer, ids as integer[], as byte enabled)
' Public Extern glDebugMessageInsertARB(as integer source, iType As Integer, id as integer, as integer severity, GLsizei length, const GLchar * buf)
' Public Extern glDebugMessageCallbackARB(GLDEBUGPROCARB callback, const * userParam)
' GLAPI GLuint APIENTRY glGetDebugMessageLogARB(iCount As Integer, BufSize As Integer, as integer * sources, as integer * types, GLuint * ids, as integer * severities, legth as integer[]s, GLchar * messageLog)
'
' Public Const GL_ARB_draw_buffers_blend 1
'
' Public Extern glBlendEquationiARB(GLuint buf, Mode As Integer)
' Public Extern glBlendEquationSeparateiARB(GLuint buf, Mode As IntegerRGB, Mode As IntegerAlpha)
' Public Extern glBlendFunciARB(GLuint buf, as integer src, as integer dst)
' Public Extern glBlendFuncSeparateiARB(GLuint buf, as integer srcRGB, as integer dstRGB, as integer srcAlpha, as integer dstAlpha)
'
' Public Const GL_ARB_draw_instanced 1
'
' Public Extern glDrawArraysInstancedARB(Mode As Integer, first as integer, iSize as Integer, GLsizei primcount)
' Public Extern glDrawElementsInstancedARB(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLsizei primcount)
'

' Public Extern glProgramParameteriARB(program As Integer, iPname As Integer, GLint value)
' Public Extern glFramebufferTextureARB(iTarget As Integer, as integer attachment, texture as Integer, iLevel as integer)
' Public Extern glFramebufferTextureLayerARB(iTarget As Integer, as integer attachment, texture as Integer, iLevel as integer, GLint layer)
' Public Extern glFramebufferTextureFaceARB(iTarget As Integer, as integer attachment, texture as Integer, iLevel as integer, face As Integer)
'
' Public Const GL_ARB_gl_spirv 1
' Public Const GL_SHADER_BINARY_FORMAT_SPIR_V_ARB As Integer = &H9551
' Public Const GL_SPIR_V_BINARY_ARB As Integer = &H9552
'
' Public Extern glSpecializeShadshader As Integershader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue)
'

' Public Extern glUniform1i64ARB(location as Integer, GLint64 x)
' Public Extern glUniform2i64ARB(location as Integer, GLint64 x, GLint64 y)
' Public Extern glUniform3i64ARB(location as Integer, GLint64 x, GLint64 y, GLint64 z)
' Public Extern glUniform4i64ARB(location as Integer, GLint64 x, GLint64 y, GLint64 z, GLint64 w)
' Public Extern glUniform1i64vARB(location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glUniform2i64vARB(location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glUniform3i64vARB(location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glUniform4i64vARB(location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glUniform1ui64ARB(location as Integer, GLuint64 x)
' Public Extern glUniform2ui64ARB(location as Integer, GLuint64 x, GLuint64 y)
' Public Extern glUniform3ui64ARB(location as Integer, GLuint64 x, GLuint64 y, GLuint64 z)
' Public Extern glUniform4ui64ARB(location as Integer, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w)
' Public Extern glUniform1ui64vARB(location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glUniform2ui64vARB(location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glUniform3ui64vARB(location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glUniform4ui64vARB(location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glGetUniformi64vARB(program As Integer, location as Integer, GLint64 * params)
' Public Extern glGetUniformui64vARB(program As Integer, location as Integer, GLuint64 * params)
' Public Extern glGetnUniformi64vARB(program As Integer, location as Integer, BufSize As Integer, GLint64 * params)
' Public Extern glGetnUniformui64vARB(program As Integer, location as Integer, BufSize As Integer, GLuint64 * params)
' Public Extern glProgramUniform1i64ARB(program As Integer, location as Integer, GLint64 x)
' Public Extern glProgramUniform2i64ARB(program As Integer, location as Integer, GLint64 x, GLint64 y)
' Public Extern glProgramUniform3i64ARB(program As Integer, location as Integer, GLint64 x, GLint64 y, GLint64 z)
' Public Extern glProgramUniform4i64ARB(program As Integer, location as Integer, GLint64 x, GLint64 y, GLint64 z, GLint64 w)
' Public Extern glProgramUniform1i64vARB(program As Integer, location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glProgramUniform2i64vARB(program As Integer, location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glProgramUniform3i64vARB(program As Integer, location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glProgramUniform4i64vARB(program As Integer, location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glProgramUniform1ui64ARB(program As Integer, location as Integer, GLuint64 x)
' Public Extern glProgramUniform2ui64ARB(program As Integer, location as Integer, GLuint64 x, GLuint64 y)
' Public Extern glProgramUniform3ui64ARB(program As Integer, location as Integer, GLuint64 x, GLuint64 y, GLuint64 z)
' Public Extern glProgramUniform4ui64ARB(program As Integer, location as Integer, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w)
' Public Extern glProgramUniform1ui64vARB(program As Integer, location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glProgramUniform2ui64vARB(program As Integer, location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glProgramUniform3ui64vARB(program As Integer, location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glProgramUniform4ui64vARB(program As Integer, location as Integer, iSize as Integer, const GLuint64 * value)
'
' Public Const GL_ARB_indirect_parameters 1
' Public Const GL_PARAMETER_BUFFER_ARB As Integer = &H80EE
' Public Const GL_PARAMETER_BUFFER_BINDING_ARB As Integer = &H80EF
'
' Public Extern glMultiDrawArraysIndirectCountARB(Mode As Integer, const * indirect, GLintptr drawcount, GLsizei maxdrawcount, stride as integer)
' Public Extern glMultiDrawElementsIndirectCountARB(Mode As Integer, iType As Integer, const * indirect, GLintptr drawcount, GLsizei maxdrawcount, stride as integer)
'
' Public Const GL_ARB_instanced_arrays 1
' Public Const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB As Integer = &H88FE
'
' Public Extern glVertexAttribDivisorARB(iIndex As Integer, GLuint divisor)
'
' Public Const GL_ARB_internalformat_query2 1
' Public Const GL_SRGB_DECODE_ARB As Integer = &H8299
' Public Const GL_VIEW_CLASS_EAC_R11 As Integer = &H9383
' Public Const GL_VIEW_CLASS_EAC_RG11 As Integer = &H9384
' Public Const GL_VIEW_CLASS_ETC2_RGB As Integer = &H9385
' Public Const GL_VIEW_CLASS_ETC2_RGBA As Integer = &H9386
' Public Const GL_VIEW_CLASS_ETC2_EAC_RGBA As Integer = &H9387
' Public Const GL_VIEW_CLASS_ASTC_4x4_RGBA As Integer = &H9388
' Public Const GL_VIEW_CLASS_ASTC_5x4_RGBA As Integer = &H9389
' Public Const GL_VIEW_CLASS_ASTC_5x5_RGBA As Integer = &H938A
' Public Const GL_VIEW_CLASS_ASTC_6x5_RGBA As Integer = &H938B
' Public Const GL_VIEW_CLASS_ASTC_6x6_RGBA As Integer = &H938C
' Public Const GL_VIEW_CLASS_ASTC_8x5_RGBA As Integer = &H938D
' Public Const GL_VIEW_CLASS_ASTC_8x6_RGBA As Integer = &H938E
' Public Const GL_VIEW_CLASS_ASTC_8x8_RGBA As Integer = &H938F
' Public Const GL_VIEW_CLASS_ASTC_1 As Integer = & H5_RGBA As Integer = &H9390
' Public Const GL_VIEW_CLASS_ASTC_1 As Integer = & H6_RGBA As Integer = &H9391
' Public Const GL_VIEW_CLASS_ASTC_1 As Integer = & H8_RGBA As Integer = &H9392
' Public Const GL_VIEW_CLASS_ASTC_1 As Integer = & H10_RGBA As Integer = &H9393
' Public Const GL_VIEW_CLASS_ASTC_12x10_RGBA As Integer = &H9394
' Public Const GL_VIEW_CLASS_ASTC_12x12_RGBA As Integer = &H9395
'
' Public Const GL_ARB_parallel_shader_compile 1
' Public Const GL_MAX_SHADER_COMPILER_THREADS_ARB As Integer = &H91B0
' Public Const GL_COMPLETION_STATUS_ARB As Integer = &H91B1
' typedef(APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC)(iCount As Integer)
'
' Public Extern glMaxShaderCompilerThreadsARB(iCount As Integer)
'
' Public Const GL_ARB_pipeline_statistics_query 1
' Public Const GL_VERTICES_SUBMITTED_ARB As Integer = &H82EE
' Public Const GL_PRIMITIVES_SUBMITTED_ARB As Integer = &H82EF
' Public Const GL_VERTEX_SHADER_INVOCATIONS_ARB As Integer = &H82F0
' Public Const GL_TESS_CONTROL_SHADER_PATCHES_ARB As Integer = &H82F1
' Public Const GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB As Integer = &H82F2
' Public Const GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB As Integer = &H82F3
' Public Const GL_FRAGMENT_SHADER_INVOCATIONS_ARB As Integer = &H82F4
' Public Const GL_COMPUTE_SHADER_INVOCATIONS_ARB As Integer = &H82F5
' Public Const GL_CLIPPING_INPUT_PRIMITIVES_ARB As Integer = &H82F6
' Public Const GL_CLIPPING_OUTPUT_PRIMITIVES_ARB As Integer = &H82F7
'
' Public Const GL_ARB_pixel_buffer_object 1
' Public Const GL_PIXEL_PACK_BUFFER_ARB As Integer = &H88EB
' Public Const GL_PIXEL_UNPACK_BUFFER_ARB As Integer = &H88EC
' Public Const GL_PIXEL_PACK_BUFFER_BINDING_ARB As Integer = &H88ED
' Public Const GL_PIXEL_UNPACK_BUFFER_BINDING_ARB As Integer = &H88EF
'
' Public Const GL_ARB_robustness 1
' Public Const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB As Integer = &H00000004
' Public Const GL_LOSE_CONTEXT_ON_RESET_ARB As Integer = &H8252
' Public Const GL_GUILTY_CONTEXT_RESET_ARB As Integer = &H8253
' Public Const GL_INNOCENT_CONTEXT_RESET_ARB As Integer = &H8254
' Public Const GL_UNKNOWN_CONTEXT_RESET_ARB As Integer = &H8255
' Public Const GL_RESET_NOTIFICATION_STRATEGY_ARB As Integer = &H8256
' Public Const GL_NO_RESET_NOTIFICATION_ARB As Integer = &H8261
'
' GLAPI as integer APIENTRY glGetGraphicsResetStatusARB()
' Public Extern glGetnTexImageARB(iTarget As Integer, iLevel as integer, iFormat as integer, iType As Integer, BufSize As Integer, * img)
' Public Extern glReadnPixelsARB(x As Integer, y As Integer, iWidth As Integer, iHeight As Integer, iFormat as integer, iType As Integer, BufSize As Integer, data as byte[])
' Public Extern glGetnCompressedTexImageARB(iTarget As Integer, GLint lod, BufSize As Integer, * img)
' Public Extern glGetnUniformfvARB(program As Integer, location as Integer, BufSize As Integer, params as single[])
' Public Extern glGetnUniformivARB(program As Integer, location as Integer, BufSize As Integer, params as integer[])
' Public Extern glGetnUniformuivARB(program As Integer, location as Integer, BufSize As Integer, params as integer[])
' Public Extern glGetnUniformdvARB(program As Integer, location as Integer, BufSize As Integer, as float * params)
'
' Public Const GL_ARB_sample_locations 1
' Public Const GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB As Integer = &H933D
' Public Const GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB As Integer = &H933E
' Public Const GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB As Integer = &H933F
' Public Const GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB As Integer = &H9340
' Public Const GL_SAMPLE_LOCATION_ARB As Integer = &H8E50
' Public Const GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB As Integer = &H9341
' Public Const GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB As Integer = &H9342
' Public Const GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB As Integer = &H9343
'
' Public Extern glFramebufferSampleLocationsfvARB(iTarget As Integer, start as integer, iSize as Integer, const GLsingle * v)
' Public Extern glNamedFramebufferSampleLocationsfvARB(GLuint framebuffer, start as integer, iSize as Integer, const GLsingle * v)
' Public Extern glEvaluateDepthValuesARB()
'
' Public Const GL_ARB_sample_shading 1
' Public Const GL_SAMPLE_SHADING_ARB As Integer = &H8C36
' Public Const GL_MIN_SAMPLE_SHADING_VALUE_ARB As Integer = &H8C37
'
' Public Extern glMinSampleShadingARB(value as single)
'
' Public Const GL_ARB_shading_language_include 1
' Public Const GL_SHADER_INCLUDE_ARB As Integer = &H8DAE
' Public Const GL_NAMED_STRING_LENGTH_ARB As Integer = &H8DE9
' Public Const GL_NAMED_STRING_TYPE_ARB As Integer = &H8DEA
'
' Public Extern glNamedStringARB(iType As Integer, GLint namelen, const name as string, GLint stringlen, const GLchar * string)
' Public Extern glDeleteNamedStringARB(GLint namelen, const name as string)
' Public Extern glCompileShaderIncludeARB(GLuint shader, iSize as Integer, const GLchar * const * path, const GLinshader As Integer
' GLAPI as byte APIENTRY glIsNamedStringARB(GLint namelen, const name as string)
' Public Extern glGetNamedStringARB(GLint namelen, const name as string, BufSize As Integer, GLint * stringlen, GLchar * string)
' Public Extern glGetNamedStringivARB(GLint namelen, const name as string, iPname As Integer, params as integer[])
'
' Public Const GL_ARB_shading_language_packing 1
'
' Public Const GL_ARB_sparse_buffer 1
' Public Const GL_SPARSE_STORAGE_BIT_ARB As Integer = &H0400
' Public Const GL_SPARSE_BUFFER_PAGE_SIZE_ARB As Integer = &H82F8
'
' Public Extern glBufferPageCommitmentARB(iTarget As Integer, offset as integer, size as integer, as byte commit)
' Public Extern glNamedBufferPageCommitmentEXT(buffer as integer, offset as integer, size as integer, as byte commit)
' Public Extern glNamedBufferPageCommitmentARB(buffer as integer, offset as integer, size as integer, as byte commit)
'
' Public Const GL_ARB_sparse_texture 1
' Public Const GL_TEXTURE_SPARSE_ARB As Integer = &H91A6
' Public Const GL_VIRTUAL_PAGE_SIZE_INDEX_ARB As Integer = &H91A7
' Public Const GL_NUM_SPARSE_LEVELS_ARB As Integer = &H91AA
' Public Const GL_NUM_VIRTUAL_PAGE_SIZES_ARB As Integer = &H91A8
' Public Const GL_VIRTUAL_PAGE_SIZE_X_ARB As Integer = &H9195
' Public Const GL_VIRTUAL_PAGE_SIZE_Y_ARB As Integer = &H9196
' Public Const GL_VIRTUAL_PAGE_SIZE_Z_ARB As Integer = &H9197
' Public Const GL_MAX_SPARSE_TEXTURE_SIZE_ARB As Integer = &H9198
' Public Const GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB As Integer = &H9199
' Public Const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB As Integer = &H919A
' Public Const GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB As Integer = &H91A9
'
' Public Extern glTexPageCommitmentARB(iTarget As Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, as byte commit)
' Public Const GL_ARB_sparse_texture2 1
' Public Const GL_ARB_sparse_texture_clamp 1
' Public Const GL_ARB_spirv_extensions 1
' Public Const GL_ARB_stencil_texturing 1
' Public Const GL_ARB_sync 1
' Public Const GL_ARB_tessellation_shader 1
' Public Const GL_ARB_texture_barrier 1
' Public Const GL_ARB_texture_border_clamp 1
' Public Const GL_CLAMP_TO_BORDER_ARB As Integer = &H812D
' Public Const GL_ARB_texture_buffer_object 1
' Public Const GL_TEXTURE_BUFFER_ARB As Integer = &H8C2A
' Public Const GL_MAX_TEXTURE_BUFFER_SIZE_ARB As Integer = &H8C2B
' Public Const GL_TEXTURE_BINDING_BUFFER_ARB As Integer = &H8C2C
' Public Const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB As Integer = &H8C2D
' Public Const GL_TEXTURE_BUFFER_FORMAT_ARB As Integer = &H8C2E
' typedef(APIENTRYP PFNGLTEXBUFFERARBPROC)(iTarget As Integer,internalformat as integer, buffer as integer)
' Public Extern glTexBufferARB(iTarget As Integer,internalformat as integer, buffer as integer)
' Public Const GL_ARB_texture_buffer_object_rgb32 1
' Public Const GL_ARB_texture_buffer_range 1
' Public Const GL_ARB_texture_compression_bptc 1
' Public Const GL_COMPRESSED_RGBA_BPTC_UNORM_ARB As Integer = &H8E8C
' Public Const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB As Integer = &H8E8D
' Public Const GL_COMPRESSED_RGB_BPTC_SIGNED_single_ARB As Integer = &H8E8E
' Public Const GL_COMPRESSED_RGB_BPTC_UNSIGNED_single_ARB As Integer = &H8E8F
' Public Const GL_ARB_texture_compression_rgtc 1
' Public Const GL_ARB_texture_cube_map_array 1
' Public Const GL_TEXTURE_CUBE_MAP_ARRAY_ARB As Integer = &H9009
' Public Const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB As Integer = &H900A
' Public Const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB As Integer = &H900B
' Public Const GL_SAMPLER_CUBE_MAP_ARRAY_ARB As Integer = &H900C
' Public Const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB As Integer = &H900D
' Public Const GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB As Integer = &H900E
' Public Const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB As Integer = &H900F
' Public Const GL_ARB_texture_filter_anisotropic 1
'
' Public Const GL_ARB_texture_filter_minmax 1
' Public Const GL_TEXTURE_REDUCTION_MODE_ARB As Integer = &H9366
' Public Const GL_WEIGHTED_AVERAGE_ARB As Integer = &H9367
'
' Public Const GL_ARB_texture_gather 1
' Public Const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB As Integer = &H8E5E
' Public Const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB As Integer = &H8E5F
' Public Const GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB As Integer = &H8F9F
'
' Public Const GL_ARB_transform_feedback_overflow_query 1
' Public Const GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB As Integer = &H82EC
' Public Const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB As Integer = &H82ED

' ==============OTROS QUE NO ESTABAN (probablemente deprecados)=============================

Public Extern glEnableClientState(capacidad As Integer)
Public Extern glDisableClientState(capacidad As Integer)
Public Extern glVertexPointer(size As Integer, type As Integer, stride As Long, data As Pointer)
Public Extern glNormalPointer(type As Integer, stride As Long, data As Pointer)
Public Extern glColorPointer(size As Integer, type As Integer, stride As Long, data As Pointer)

Public Function createVBO(data As Pointer, dataSizeBytes As Integer, target As Integer, usage As Integer) As Integer

  Dim id As Integer = 0 ' 0 Is Reserved, glGenBuffersARB()will Return non - zero id If success

  glGenBuffers(1, VarPtr(id))                     'Create a vbo
  glBindBuffer(target, id)                        'activate vbo id To Use
  glBufferData(target, dataSizeBytes, data, usage)     'upload data To video card

  ' check data size In VBO Is Same As Input array, If Not Return 0 And delete VBO
  Dim bufferSize As Integer = 0
  glGetBufferParameteriv(target, glc.GL_BUFFER_SIZE, VarPtr(bufferSize))
  If (dataSizeBytes <> bufferSize) Then
    glDeleteBuffers(1, VarPtr(id))
    id = 0
    Print "[createVBO()] Data size is mismatch with input array"
  End If

  Return id ' Return VBO id

End

Public Function CheckExtension(sExtension As String) As Boolean

  Return (InStr(LCase(GLx.glGetString(glc.EXTENSIONS)), LCase(sExtension)) > 0)

End
